{
  "b43e600b-7aba-4e66-b63d-d8183584a991": {
    "id": "b43e600b-7aba-4e66-b63d-d8183584a991",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:14:32.514848",
    "updated_at": "2025-03-15T01:14:32.514852"
  },
  "da5b68fb-e083-4533-a197-03aa7d7d5ffa": {
    "id": "da5b68fb-e083-4533-a197-03aa7d7d5ffa",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:14:32.515972",
    "updated_at": "2025-03-15T01:14:32.515975"
  },
  "80deab48-54cd-4f62-99ee-ea80dd2caedb": {
    "id": "80deab48-54cd-4f62-99ee-ea80dd2caedb",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:14:32.516944",
    "updated_at": "2025-03-15T01:14:32.516962"
  },
  "f49a70e0-d97b-4237-ae96-10b0a7f709e9": {
    "id": "f49a70e0-d97b-4237-ae96-10b0a7f709e9",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:14:42.102601",
    "updated_at": "2025-03-15T01:14:42.102610"
  },
  "8b73da98-4c2a-49f7-9fd7-3e05ba113c10": {
    "id": "8b73da98-4c2a-49f7-9fd7-3e05ba113c10",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:14:42.106692",
    "updated_at": "2025-03-15T01:14:42.106696"
  },
  "05be8af7-49ff-4065-a9d1-7b623c5db8cb": {
    "id": "05be8af7-49ff-4065-a9d1-7b623c5db8cb",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:14:42.108899",
    "updated_at": "2025-03-15T01:14:42.108902"
  },
  "0ac14e2d-a795-4767-9ed5-799e22949613": {
    "id": "0ac14e2d-a795-4767-9ed5-799e22949613",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:22:38.785471",
    "updated_at": "2025-03-15T01:22:38.785478"
  },
  "d71311b0-3a6f-40e1-8cff-1456d04051d8": {
    "id": "d71311b0-3a6f-40e1-8cff-1456d04051d8",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:22:38.788134",
    "updated_at": "2025-03-15T01:22:38.788139"
  },
  "bc8f4a62-dea8-4f95-aa55-848ba3e077c1": {
    "id": "bc8f4a62-dea8-4f95-aa55-848ba3e077c1",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:22:38.791516",
    "updated_at": "2025-03-15T01:22:38.791520"
  },
  "ad08c399-d3f7-4616-bb6e-53e73e7b917a": {
    "id": "ad08c399-d3f7-4616-bb6e-53e73e7b917a",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:22:55.299371",
    "updated_at": "2025-03-15T01:22:55.299377"
  },
  "0aa62c75-0cd4-410c-8093-4bcd33d06afb": {
    "id": "0aa62c75-0cd4-410c-8093-4bcd33d06afb",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:22:55.302381",
    "updated_at": "2025-03-15T01:22:55.302384"
  },
  "a05c50f4-999b-4fdf-9d0d-bfc96c57fe14": {
    "id": "a05c50f4-999b-4fdf-9d0d-bfc96c57fe14",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:22:55.305005",
    "updated_at": "2025-03-15T01:22:55.305007"
  },
  "1aff4501-37c1-4af9-8dd3-e0f75a6cc4ac": {
    "id": "1aff4501-37c1-4af9-8dd3-e0f75a6cc4ac",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:23:41.188650",
    "updated_at": "2025-03-15T01:23:41.188658"
  },
  "69ed66fd-24af-468b-a33d-250ef7dee0b3": {
    "id": "69ed66fd-24af-468b-a33d-250ef7dee0b3",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:23:41.192647",
    "updated_at": "2025-03-15T01:23:41.192650"
  },
  "6380f000-9293-4c0e-8fbf-b65040ce098d": {
    "id": "6380f000-9293-4c0e-8fbf-b65040ce098d",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:23:41.196811",
    "updated_at": "2025-03-15T01:23:41.196814"
  },
  "fad1e83c-f659-4c41-ac2a-c1bc6533fde8": {
    "id": "fad1e83c-f659-4c41-ac2a-c1bc6533fde8",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:23:51.964856",
    "updated_at": "2025-03-15T01:23:51.964861"
  },
  "92efc96a-42b7-4448-93b8-ffd79d8f98de": {
    "id": "92efc96a-42b7-4448-93b8-ffd79d8f98de",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:23:51.967473",
    "updated_at": "2025-03-15T01:23:51.967476"
  },
  "96d061cb-5d00-4f85-b4e6-f88e42f5ea4a": {
    "id": "96d061cb-5d00-4f85-b4e6-f88e42f5ea4a",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:23:51.979739",
    "updated_at": "2025-03-15T01:23:51.979741"
  },
  "50e707f0-39e0-45b1-b0e9-ec94a0ef0daa": {
    "id": "50e707f0-39e0-45b1-b0e9-ec94a0ef0daa",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:24:33.508193",
    "updated_at": "2025-03-15T01:24:33.508198"
  },
  "561a2f15-fabd-45e8-bb7d-4cb0e0fac39b": {
    "id": "561a2f15-fabd-45e8-bb7d-4cb0e0fac39b",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:24:33.510852",
    "updated_at": "2025-03-15T01:24:33.510857"
  },
  "2d41f1b5-8aac-4116-af57-d9a1c0dcfbe0": {
    "id": "2d41f1b5-8aac-4116-af57-d9a1c0dcfbe0",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:24:33.523556",
    "updated_at": "2025-03-15T01:24:33.523559"
  },
  "41f561f9-e093-484a-91fc-51ad65739f0c": {
    "id": "41f561f9-e093-484a-91fc-51ad65739f0c",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:27:23.753607",
    "updated_at": "2025-03-15T01:27:23.753613"
  },
  "a17dffbe-12a9-4344-8ca0-e4e4b04ef825": {
    "id": "a17dffbe-12a9-4344-8ca0-e4e4b04ef825",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:27:23.759497",
    "updated_at": "2025-03-15T01:27:23.759502"
  },
  "3401b5bd-fc4a-4092-abef-214f44c8289a": {
    "id": "3401b5bd-fc4a-4092-abef-214f44c8289a",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:27:23.773494",
    "updated_at": "2025-03-15T01:27:23.773499"
  },
  "65b4c412-a839-4a9c-a758-0dd6372f13a2": {
    "id": "65b4c412-a839-4a9c-a758-0dd6372f13a2",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:27:35.274508",
    "updated_at": "2025-03-15T01:27:35.274515"
  },
  "1a869605-117d-4ae0-87da-f421473409b9": {
    "id": "1a869605-117d-4ae0-87da-f421473409b9",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:27:35.280188",
    "updated_at": "2025-03-15T01:27:35.280191"
  },
  "f367f99c-4acb-4af6-a045-612aaf2e2bf0": {
    "id": "f367f99c-4acb-4af6-a045-612aaf2e2bf0",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:27:35.287154",
    "updated_at": "2025-03-15T01:27:35.287158"
  },
  "101e3f15-3b94-43e1-b3b1-8c2f143dcae0": {
    "id": "101e3f15-3b94-43e1-b3b1-8c2f143dcae0",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:27:45.692430",
    "updated_at": "2025-03-15T01:27:45.692435"
  },
  "4eb18aa6-de44-4c51-81c5-30173cefa7c0": {
    "id": "4eb18aa6-de44-4c51-81c5-30173cefa7c0",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:27:45.698520",
    "updated_at": "2025-03-15T01:27:45.698523"
  },
  "eeafbb39-3ca1-4081-8baf-645cf97d41ba": {
    "id": "eeafbb39-3ca1-4081-8baf-645cf97d41ba",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:27:45.704668",
    "updated_at": "2025-03-15T01:27:45.704671"
  },
  "f6fba32b-d855-4f29-b92c-5f314627d603": {
    "id": "f6fba32b-d855-4f29-b92c-5f314627d603",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:28:05.549837",
    "updated_at": "2025-03-15T01:28:05.549845"
  },
  "3d78683d-9b55-48a9-a2c6-65545fcc042a": {
    "id": "3d78683d-9b55-48a9-a2c6-65545fcc042a",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:28:05.557647",
    "updated_at": "2025-03-15T01:28:05.557651"
  },
  "3dac1ae1-6535-4a5c-86c2-a17fa0ffaae7": {
    "id": "3dac1ae1-6535-4a5c-86c2-a17fa0ffaae7",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:28:05.564850",
    "updated_at": "2025-03-15T01:28:05.564854"
  },
  "1084b3b3-1486-49bc-a2c5-15c68cd5c12e": {
    "id": "1084b3b3-1486-49bc-a2c5-15c68cd5c12e",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:28:11.390614",
    "updated_at": "2025-03-15T01:28:11.390621"
  },
  "3257577e-c739-4358-8438-df1d7a1bfb86": {
    "id": "3257577e-c739-4358-8438-df1d7a1bfb86",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:28:11.398452",
    "updated_at": "2025-03-15T01:28:11.398456"
  },
  "7ba5d413-d002-417e-a4aa-1f98232e39d2": {
    "id": "7ba5d413-d002-417e-a4aa-1f98232e39d2",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:28:11.406601",
    "updated_at": "2025-03-15T01:28:11.406605"
  },
  "039d4047-0384-46c3-83a4-cc119cd0575c": {
    "id": "039d4047-0384-46c3-83a4-cc119cd0575c",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:30:03.327587",
    "updated_at": "2025-03-15T01:30:03.327593"
  },
  "0a724e61-6a6a-455a-994a-9d0356fea624": {
    "id": "0a724e61-6a6a-455a-994a-9d0356fea624",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:30:03.332199",
    "updated_at": "2025-03-15T01:30:03.332202"
  },
  "968602a6-a267-4423-8c01-d92d4154941c": {
    "id": "968602a6-a267-4423-8c01-d92d4154941c",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:30:03.336784",
    "updated_at": "2025-03-15T01:30:03.336787"
  },
  "70b03b07-dcfa-4b13-8f6b-b467860d7c83": {
    "id": "70b03b07-dcfa-4b13-8f6b-b467860d7c83",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:30:09.022558",
    "updated_at": "2025-03-15T01:30:09.022562"
  },
  "a3d32122-6aab-4942-87ba-443d4bdd2f1b": {
    "id": "a3d32122-6aab-4942-87ba-443d4bdd2f1b",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:30:09.027523",
    "updated_at": "2025-03-15T01:30:09.027526"
  },
  "cd9b723a-e935-46ba-9780-7a4426604d19": {
    "id": "cd9b723a-e935-46ba-9780-7a4426604d19",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:30:09.032601",
    "updated_at": "2025-03-15T01:30:09.032604"
  },
  "de572487-4e02-4b19-a113-a083908d50dd": {
    "id": "de572487-4e02-4b19-a113-a083908d50dd",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:30:16.100854",
    "updated_at": "2025-03-15T01:30:16.100859"
  },
  "77b27141-c2fb-4020-ba70-5997aac037c4": {
    "id": "77b27141-c2fb-4020-ba70-5997aac037c4",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:30:16.106629",
    "updated_at": "2025-03-15T01:30:16.106635"
  },
  "26e35544-1cc5-433e-bd91-d615328dcf59": {
    "id": "26e35544-1cc5-433e-bd91-d615328dcf59",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:30:16.111921",
    "updated_at": "2025-03-15T01:30:16.111925"
  },
  "7a17e9a6-a295-4af2-89f6-f1a5e0be9be1": {
    "id": "7a17e9a6-a295-4af2-89f6-f1a5e0be9be1",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:30:45.049576",
    "updated_at": "2025-03-15T01:30:45.049581"
  },
  "e37c0de4-0d49-40c1-9a0d-6b1174ee4ada": {
    "id": "e37c0de4-0d49-40c1-9a0d-6b1174ee4ada",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:30:45.055362",
    "updated_at": "2025-03-15T01:30:45.055366"
  },
  "05c443bb-f8a3-45ba-a8e9-d925e6205b16": {
    "id": "05c443bb-f8a3-45ba-a8e9-d925e6205b16",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:30:45.060628",
    "updated_at": "2025-03-15T01:30:45.060631"
  },
  "aa535cd8-b9df-491d-9e6d-1f22ef351d29": {
    "id": "aa535cd8-b9df-491d-9e6d-1f22ef351d29",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:31:03.376543",
    "updated_at": "2025-03-15T01:31:03.376548"
  },
  "eb53acc9-4a03-4b59-a7c0-4b37987f42c7": {
    "id": "eb53acc9-4a03-4b59-a7c0-4b37987f42c7",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:31:03.382393",
    "updated_at": "2025-03-15T01:31:03.382396"
  },
  "6374ee88-bd9c-4059-bbe8-a4022b2f3b9a": {
    "id": "6374ee88-bd9c-4059-bbe8-a4022b2f3b9a",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:31:03.388074",
    "updated_at": "2025-03-15T01:31:03.388077"
  },
  "f651c933-9f3f-4511-bbc0-7bb77a4dee52": {
    "id": "f651c933-9f3f-4511-bbc0-7bb77a4dee52",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:31:32.087361",
    "updated_at": "2025-03-15T01:31:32.087366"
  },
  "2882411c-64db-41eb-87fe-1bf16702991f": {
    "id": "2882411c-64db-41eb-87fe-1bf16702991f",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:31:32.093595",
    "updated_at": "2025-03-15T01:31:32.093598"
  },
  "c38cee24-2942-4d1b-a82c-43054316d8e9": {
    "id": "c38cee24-2942-4d1b-a82c-43054316d8e9",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:31:32.099577",
    "updated_at": "2025-03-15T01:31:32.099580"
  },
  "d3cc2daa-eb28-45a4-9f29-5631515a194f": {
    "id": "d3cc2daa-eb28-45a4-9f29-5631515a194f",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:32:03.032494",
    "updated_at": "2025-03-15T01:32:03.032500"
  },
  "2d00eb3d-b10d-44e8-b9cc-955b9dfe297a": {
    "id": "2d00eb3d-b10d-44e8-b9cc-955b9dfe297a",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:32:03.039119",
    "updated_at": "2025-03-15T01:32:03.039122"
  },
  "1e60c858-07dc-452f-9449-1f2e845a15b4": {
    "id": "1e60c858-07dc-452f-9449-1f2e845a15b4",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:32:03.045628",
    "updated_at": "2025-03-15T01:32:03.045631"
  },
  "a14b4d6f-c272-4778-bf36-fc42fe25628d": {
    "id": "a14b4d6f-c272-4778-bf36-fc42fe25628d",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:33:13.572207",
    "updated_at": "2025-03-15T01:33:13.572212"
  },
  "b44aecc0-c68e-4ce6-b769-755e66dac832": {
    "id": "b44aecc0-c68e-4ce6-b769-755e66dac832",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:33:13.578992",
    "updated_at": "2025-03-15T01:33:13.578995"
  },
  "5c91320e-96f0-473d-b108-2b7a1add0ef7": {
    "id": "5c91320e-96f0-473d-b108-2b7a1add0ef7",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:33:13.586014",
    "updated_at": "2025-03-15T01:33:13.586016"
  },
  "1b6e2c47-1176-477c-baeb-faee6ac38a90": {
    "id": "1b6e2c47-1176-477c-baeb-faee6ac38a90",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:33:25.431496",
    "updated_at": "2025-03-15T01:33:25.431503"
  },
  "7e6bb5f5-da66-4dbb-b324-ab4e28fc2630": {
    "id": "7e6bb5f5-da66-4dbb-b324-ab4e28fc2630",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:33:25.438759",
    "updated_at": "2025-03-15T01:33:25.438763"
  },
  "0933435b-e5ef-4832-b241-80b208c5a086": {
    "id": "0933435b-e5ef-4832-b241-80b208c5a086",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:33:25.455698",
    "updated_at": "2025-03-15T01:33:25.455702"
  },
  "8b290f33-7786-4f4b-9a6d-9f0b21873397": {
    "id": "8b290f33-7786-4f4b-9a6d-9f0b21873397",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:33:32.934669",
    "updated_at": "2025-03-15T01:33:32.934675"
  },
  "276a6dc5-7ae7-43fd-bc1e-1a76814bb20d": {
    "id": "276a6dc5-7ae7-43fd-bc1e-1a76814bb20d",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:33:32.942240",
    "updated_at": "2025-03-15T01:33:32.942243"
  },
  "3df4ea64-dbc3-4ec3-9ced-ed2c5e611606": {
    "id": "3df4ea64-dbc3-4ec3-9ced-ed2c5e611606",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:33:32.950414",
    "updated_at": "2025-03-15T01:33:32.950417"
  },
  "5d48e2f0-3352-40aa-8336-eeb0cfde5557": {
    "id": "5d48e2f0-3352-40aa-8336-eeb0cfde5557",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:06.076622",
    "updated_at": "2025-03-15T01:34:06.076629"
  },
  "398ecb90-ce67-4baf-b658-9b02b4bdf78b": {
    "id": "398ecb90-ce67-4baf-b658-9b02b4bdf78b",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:06.089628",
    "updated_at": "2025-03-15T01:34:06.089635"
  },
  "540160be-a75a-4232-bff7-4d59cc53b653": {
    "id": "540160be-a75a-4232-bff7-4d59cc53b653",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:06.102708",
    "updated_at": "2025-03-15T01:34:06.102715"
  },
  "19e751eb-faa5-47ed-8495-fcd0c8646b25": {
    "id": "19e751eb-faa5-47ed-8495-fcd0c8646b25",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:07.873520",
    "updated_at": "2025-03-15T01:34:07.873525"
  },
  "f69dc903-3878-4712-a158-856b071db799": {
    "id": "f69dc903-3878-4712-a158-856b071db799",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:07.881493",
    "updated_at": "2025-03-15T01:34:07.881496"
  },
  "9730123e-78c9-482e-a4ae-45c2734fca70": {
    "id": "9730123e-78c9-482e-a4ae-45c2734fca70",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:07.889614",
    "updated_at": "2025-03-15T01:34:07.889618"
  },
  "62ea8f64-f3d4-4e78-a766-a2e504620935": {
    "id": "62ea8f64-f3d4-4e78-a766-a2e504620935",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:12.842605",
    "updated_at": "2025-03-15T01:34:12.842611"
  },
  "8ecfdbef-4704-4281-b2e9-c264464c1862": {
    "id": "8ecfdbef-4704-4281-b2e9-c264464c1862",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:12.850854",
    "updated_at": "2025-03-15T01:34:12.850858"
  },
  "c03bf413-6ca5-4893-a785-f491de1cb284": {
    "id": "c03bf413-6ca5-4893-a785-f491de1cb284",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:12.869217",
    "updated_at": "2025-03-15T01:34:12.869221"
  },
  "9d4b6a47-225f-402f-8069-3a38576ee9ef": {
    "id": "9d4b6a47-225f-402f-8069-3a38576ee9ef",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:17.237669",
    "updated_at": "2025-03-15T01:34:17.237674"
  },
  "3843dfa5-ff77-4101-83bd-a5131520bd70": {
    "id": "3843dfa5-ff77-4101-83bd-a5131520bd70",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:17.247410",
    "updated_at": "2025-03-15T01:34:17.247418"
  },
  "66d10a61-5d43-432c-abad-724575784dc9": {
    "id": "66d10a61-5d43-432c-abad-724575784dc9",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:17.256312",
    "updated_at": "2025-03-15T01:34:17.256317"
  },
  "16a562b6-68cf-4e3f-89dc-801b0f75a4d0": {
    "id": "16a562b6-68cf-4e3f-89dc-801b0f75a4d0",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:18.046674",
    "updated_at": "2025-03-15T01:34:18.046679"
  },
  "f286410b-b88f-4b62-9bca-a88d2742d57e": {
    "id": "f286410b-b88f-4b62-9bca-a88d2742d57e",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:18.055616",
    "updated_at": "2025-03-15T01:34:18.055620"
  },
  "39d2e03b-5b42-42de-98dc-26c967c33db0": {
    "id": "39d2e03b-5b42-42de-98dc-26c967c33db0",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:18.074454",
    "updated_at": "2025-03-15T01:34:18.074458"
  },
  "21e618f8-f83e-4466-b431-ff9eccf25130": {
    "id": "21e618f8-f83e-4466-b431-ff9eccf25130",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:20.059323",
    "updated_at": "2025-03-15T01:34:20.059329"
  },
  "0962b034-9ceb-4f72-a3c1-44205b29c365": {
    "id": "0962b034-9ceb-4f72-a3c1-44205b29c365",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:20.068862",
    "updated_at": "2025-03-15T01:34:20.068866"
  },
  "51a12fef-7a73-4f71-940c-748f5cc3d75f": {
    "id": "51a12fef-7a73-4f71-940c-748f5cc3d75f",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:20.078525",
    "updated_at": "2025-03-15T01:34:20.078528"
  },
  "d0a33c18-af3e-4730-bc72-dc640d7cb1fa": {
    "id": "d0a33c18-af3e-4730-bc72-dc640d7cb1fa",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:23.642706",
    "updated_at": "2025-03-15T01:34:23.642712"
  },
  "97e429de-d539-4cd0-a146-032eb0d357c3": {
    "id": "97e429de-d539-4cd0-a146-032eb0d357c3",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:23.659372",
    "updated_at": "2025-03-15T01:34:23.659376"
  },
  "0b1a91e4-7f95-4b3d-a80f-5456e8ef36a6": {
    "id": "0b1a91e4-7f95-4b3d-a80f-5456e8ef36a6",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:23.675850",
    "updated_at": "2025-03-15T01:34:23.675853"
  },
  "3abed7cd-0d1a-4459-baab-fb8d84d39346": {
    "id": "3abed7cd-0d1a-4459-baab-fb8d84d39346",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:24.528606",
    "updated_at": "2025-03-15T01:34:24.528611"
  },
  "dc170047-6e08-4c78-8434-c7e3153d9f17": {
    "id": "dc170047-6e08-4c78-8434-c7e3153d9f17",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:24.538834",
    "updated_at": "2025-03-15T01:34:24.538838"
  },
  "d30086e1-acce-48b5-addc-92a54264f534": {
    "id": "d30086e1-acce-48b5-addc-92a54264f534",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:24.558907",
    "updated_at": "2025-03-15T01:34:24.558911"
  },
  "f9187eb5-d468-43f2-a880-a45986ea9656": {
    "id": "f9187eb5-d468-43f2-a880-a45986ea9656",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:37.657760",
    "updated_at": "2025-03-15T01:34:37.657766"
  },
  "60649ee6-11e2-486d-9768-bb99b624fe79": {
    "id": "60649ee6-11e2-486d-9768-bb99b624fe79",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:37.667575",
    "updated_at": "2025-03-15T01:34:37.667578"
  },
  "edf82ef1-dafb-40d7-95b8-7b1d11d1a0d5": {
    "id": "edf82ef1-dafb-40d7-95b8-7b1d11d1a0d5",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:37.677448",
    "updated_at": "2025-03-15T01:34:37.677451"
  },
  "111faad5-b64b-4859-abb5-0c2678703e77": {
    "id": "111faad5-b64b-4859-abb5-0c2678703e77",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:44.435449",
    "updated_at": "2025-03-15T01:34:44.435455"
  },
  "b47a46df-fe98-453b-86fa-e2070e33eeaa": {
    "id": "b47a46df-fe98-453b-86fa-e2070e33eeaa",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:44.445890",
    "updated_at": "2025-03-15T01:34:44.445894"
  },
  "8bf57020-a5f7-4372-b26f-0d7dd0c2ebee": {
    "id": "8bf57020-a5f7-4372-b26f-0d7dd0c2ebee",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:44.456205",
    "updated_at": "2025-03-15T01:34:44.456208"
  },
  "c769c150-5761-433f-a047-e63818697e61": {
    "id": "c769c150-5761-433f-a047-e63818697e61",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:50.219220",
    "updated_at": "2025-03-15T01:34:50.219225"
  },
  "fae4966a-ed8d-4ba7-8182-c6c459c558fd": {
    "id": "fae4966a-ed8d-4ba7-8182-c6c459c558fd",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:50.230091",
    "updated_at": "2025-03-15T01:34:50.230094"
  },
  "25acc50d-cbf9-4bc1-8d78-e5c4b3578811": {
    "id": "25acc50d-cbf9-4bc1-8d78-e5c4b3578811",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:50.240803",
    "updated_at": "2025-03-15T01:34:50.240806"
  },
  "ecbd9a73-fd6c-401e-9dcd-d5b0ccd5f8e7": {
    "id": "ecbd9a73-fd6c-401e-9dcd-d5b0ccd5f8e7",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:56.101772",
    "updated_at": "2025-03-15T01:34:56.101778"
  },
  "6faccd11-3617-4637-9031-592cc05a81a2": {
    "id": "6faccd11-3617-4637-9031-592cc05a81a2",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:56.112996",
    "updated_at": "2025-03-15T01:34:56.113000"
  },
  "b9cf8102-015b-449e-9c3c-08bf63a63dd2": {
    "id": "b9cf8102-015b-449e-9c3c-08bf63a63dd2",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:34:56.124607",
    "updated_at": "2025-03-15T01:34:56.124611"
  },
  "ab7accb5-309e-4d69-a171-9c93c34551b9": {
    "id": "ab7accb5-309e-4d69-a171-9c93c34551b9",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:35:00.182708",
    "updated_at": "2025-03-15T01:35:00.182713"
  },
  "4bdfbd7f-e0d3-4bb3-98ca-f6cabe292144": {
    "id": "4bdfbd7f-e0d3-4bb3-98ca-f6cabe292144",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:35:00.194634",
    "updated_at": "2025-03-15T01:35:00.194637"
  },
  "a392c4e6-7c6c-4f8e-ba09-46961f8ab6b7": {
    "id": "a392c4e6-7c6c-4f8e-ba09-46961f8ab6b7",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:35:00.205673",
    "updated_at": "2025-03-15T01:35:00.205676"
  },
  "c1858e75-fc0c-425f-86c8-89419783a7ec": {
    "id": "c1858e75-fc0c-425f-86c8-89419783a7ec",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:35:28.143742",
    "updated_at": "2025-03-15T01:35:28.143746"
  },
  "a50748f2-e49b-4bc7-8668-9b0f90e4751c": {
    "id": "a50748f2-e49b-4bc7-8668-9b0f90e4751c",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:35:28.155225",
    "updated_at": "2025-03-15T01:35:28.155229"
  },
  "eea377e9-61c6-437b-8d68-1d5302c54d1b": {
    "id": "eea377e9-61c6-437b-8d68-1d5302c54d1b",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:35:28.166586",
    "updated_at": "2025-03-15T01:35:28.166590"
  },
  "1b6791a8-be65-4ad5-ba64-5f3e61ca54bc": {
    "id": "1b6791a8-be65-4ad5-ba64-5f3e61ca54bc",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:35:41.552973",
    "updated_at": "2025-03-15T01:35:41.552978"
  },
  "4f28001f-c4f2-4bc0-9c82-98aec3343486": {
    "id": "4f28001f-c4f2-4bc0-9c82-98aec3343486",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:35:41.565137",
    "updated_at": "2025-03-15T01:35:41.565145"
  },
  "fc899e77-d6c8-4875-97e8-14cdf39a275b": {
    "id": "fc899e77-d6c8-4875-97e8-14cdf39a275b",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:35:41.576949",
    "updated_at": "2025-03-15T01:35:41.576953"
  },
  "b9ee9fc0-69d0-4ff5-bae5-adf52ae6a607": {
    "id": "b9ee9fc0-69d0-4ff5-bae5-adf52ae6a607",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:35:48.173396",
    "updated_at": "2025-03-15T01:35:48.173401"
  },
  "7d70776c-abe4-4859-a8c5-8909503e1998": {
    "id": "7d70776c-abe4-4859-a8c5-8909503e1998",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:35:48.185849",
    "updated_at": "2025-03-15T01:35:48.185852"
  },
  "bb0ad53c-9194-4a3c-a372-d8eb65ac3090": {
    "id": "bb0ad53c-9194-4a3c-a372-d8eb65ac3090",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:35:48.200166",
    "updated_at": "2025-03-15T01:35:48.200171"
  },
  "739b3253-4c5e-445d-ae90-749a3ff6e90c": {
    "id": "739b3253-4c5e-445d-ae90-749a3ff6e90c",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:35:50.988608",
    "updated_at": "2025-03-15T01:35:50.988613"
  },
  "198625d0-e5bd-4122-aefa-20351f7c9cf0": {
    "id": "198625d0-e5bd-4122-aefa-20351f7c9cf0",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:35:51.001156",
    "updated_at": "2025-03-15T01:35:51.001160"
  },
  "b2296384-0035-47cd-add8-515228e7a0af": {
    "id": "b2296384-0035-47cd-add8-515228e7a0af",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:35:51.013430",
    "updated_at": "2025-03-15T01:35:51.013433"
  },
  "3dec9a7c-b857-4863-89d4-2e4f37af2a0f": {
    "id": "3dec9a7c-b857-4863-89d4-2e4f37af2a0f",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:36:01.111807",
    "updated_at": "2025-03-15T01:36:01.111812"
  },
  "a1495b69-539a-45e8-a57c-05514687f39d": {
    "id": "a1495b69-539a-45e8-a57c-05514687f39d",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:36:01.124745",
    "updated_at": "2025-03-15T01:36:01.124749"
  },
  "660a2f9e-bfff-4f48-9a78-f291e5ca895a": {
    "id": "660a2f9e-bfff-4f48-9a78-f291e5ca895a",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:36:01.137507",
    "updated_at": "2025-03-15T01:36:01.137513"
  },
  "1499e51b-6478-4c46-b151-2ac04ca9b06f": {
    "id": "1499e51b-6478-4c46-b151-2ac04ca9b06f",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:36:16.054549",
    "updated_at": "2025-03-15T01:36:16.054555"
  },
  "2d1b9be9-41f8-4586-9eab-1de99b64e6f8": {
    "id": "2d1b9be9-41f8-4586-9eab-1de99b64e6f8",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:36:16.067832",
    "updated_at": "2025-03-15T01:36:16.067838"
  },
  "c8c96dba-8068-473a-b276-79407dbaa8ee": {
    "id": "c8c96dba-8068-473a-b276-79407dbaa8ee",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:36:16.086006",
    "updated_at": "2025-03-15T01:36:16.086017"
  },
  "6b36bea0-baba-4f96-b661-078a68d95dfb": {
    "id": "6b36bea0-baba-4f96-b661-078a68d95dfb",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:36:27.326860",
    "updated_at": "2025-03-15T01:36:27.326866"
  },
  "a8708b3d-c4bb-439f-9bbe-3ebac84bf5ab": {
    "id": "a8708b3d-c4bb-439f-9bbe-3ebac84bf5ab",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:36:27.340333",
    "updated_at": "2025-03-15T01:36:27.340336"
  },
  "4440267b-18e9-4913-8928-a2124629c0af": {
    "id": "4440267b-18e9-4913-8928-a2124629c0af",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:36:27.355083",
    "updated_at": "2025-03-15T01:36:27.355087"
  },
  "938dcb7d-a3c3-4ba7-a18e-1b922b746b6f": {
    "id": "938dcb7d-a3c3-4ba7-a18e-1b922b746b6f",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:36:28.610955",
    "updated_at": "2025-03-15T01:36:28.610960"
  },
  "263b913f-b073-4d0c-9de1-23e3a3805cf3": {
    "id": "263b913f-b073-4d0c-9de1-23e3a3805cf3",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:36:28.627233",
    "updated_at": "2025-03-15T01:36:28.627237"
  },
  "1d9b82b6-d7e7-43c3-b527-3a2407a6004a": {
    "id": "1d9b82b6-d7e7-43c3-b527-3a2407a6004a",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:36:28.641236",
    "updated_at": "2025-03-15T01:36:28.641239"
  },
  "56fa762a-b1e2-4c15-afd7-8f0e6be2170a": {
    "id": "56fa762a-b1e2-4c15-afd7-8f0e6be2170a",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:36:31.024324",
    "updated_at": "2025-03-15T01:36:31.024329"
  },
  "9512ac16-541e-443f-91fd-828c29026ad2": {
    "id": "9512ac16-541e-443f-91fd-828c29026ad2",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:36:31.038384",
    "updated_at": "2025-03-15T01:36:31.038387"
  },
  "32a73609-d5ab-4040-b0c9-956fd128a6eb": {
    "id": "32a73609-d5ab-4040-b0c9-956fd128a6eb",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:36:31.052180",
    "updated_at": "2025-03-15T01:36:31.052183"
  },
  "297e4aa3-f272-4ac4-835e-25373f489209": {
    "id": "297e4aa3-f272-4ac4-835e-25373f489209",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:36:38.261590",
    "updated_at": "2025-03-15T01:36:38.261596"
  },
  "8ebfcc28-1f81-49d9-aa2b-1812694f7b36": {
    "id": "8ebfcc28-1f81-49d9-aa2b-1812694f7b36",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:36:38.276678",
    "updated_at": "2025-03-15T01:36:38.276683"
  },
  "e376f756-f048-4130-b043-4896553b8d0d": {
    "id": "e376f756-f048-4130-b043-4896553b8d0d",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:36:38.290949",
    "updated_at": "2025-03-15T01:36:38.290953"
  },
  "8b6e91ce-e20c-45c5-915f-deb371614947": {
    "id": "8b6e91ce-e20c-45c5-915f-deb371614947",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:38:59.138431",
    "updated_at": "2025-03-15T01:38:59.138437"
  },
  "fa675e69-5fb5-45d8-9ff9-349aa5a63390": {
    "id": "fa675e69-5fb5-45d8-9ff9-349aa5a63390",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:38:59.164809",
    "updated_at": "2025-03-15T01:38:59.164816"
  },
  "842caca3-698f-4796-8d0b-60cf470ed5de": {
    "id": "842caca3-698f-4796-8d0b-60cf470ed5de",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:38:59.199635",
    "updated_at": "2025-03-15T01:38:59.199642"
  },
  "68d67da6-4315-424e-9fa3-ae5af6aae1b0": {
    "id": "68d67da6-4315-424e-9fa3-ae5af6aae1b0",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:39:18.343129",
    "updated_at": "2025-03-15T01:39:18.343134"
  },
  "092fec6c-7154-4e5b-9e0e-36ea5b52dda8": {
    "id": "092fec6c-7154-4e5b-9e0e-36ea5b52dda8",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:39:18.358440",
    "updated_at": "2025-03-15T01:39:18.358448"
  },
  "eb78f3eb-ce85-4f37-b25c-48edf8d5d27c": {
    "id": "eb78f3eb-ce85-4f37-b25c-48edf8d5d27c",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:39:18.373158",
    "updated_at": "2025-03-15T01:39:18.373164"
  },
  "deabb353-e367-4189-9d42-9e34cb5f2e7e": {
    "id": "deabb353-e367-4189-9d42-9e34cb5f2e7e",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:44:11.468626",
    "updated_at": "2025-03-15T01:44:11.468633"
  },
  "3978eb42-d406-4dc5-8ce4-d43594233ed9": {
    "id": "3978eb42-d406-4dc5-8ce4-d43594233ed9",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:44:11.495654",
    "updated_at": "2025-03-15T01:44:11.495660"
  },
  "29770aee-c442-48c9-b6c5-f066fabc933f": {
    "id": "29770aee-c442-48c9-b6c5-f066fabc933f",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:44:11.524009",
    "updated_at": "2025-03-15T01:44:11.524016"
  },
  "5684abf1-002e-4a13-8735-8905754252f1": {
    "id": "5684abf1-002e-4a13-8735-8905754252f1",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:44:21.834914",
    "updated_at": "2025-03-15T01:44:21.834919"
  },
  "b9f732ea-8008-4e19-8bdc-1b44e3d59ea6": {
    "id": "b9f732ea-8008-4e19-8bdc-1b44e3d59ea6",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:44:21.850249",
    "updated_at": "2025-03-15T01:44:21.850252"
  },
  "909b746a-176c-480b-8276-fd0c52665e75": {
    "id": "909b746a-176c-480b-8276-fd0c52665e75",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T01:44:21.865356",
    "updated_at": "2025-03-15T01:44:21.865359"
  },
  "14a4613a-b056-44ff-b6d7-88dc96059550": {
    "id": "14a4613a-b056-44ff-b6d7-88dc96059550",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:21:25.519609",
    "updated_at": "2025-03-15T02:21:25.519614"
  },
  "a4b5840c-6c0f-4320-8484-be1578751044": {
    "id": "a4b5840c-6c0f-4320-8484-be1578751044",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:21:25.535485",
    "updated_at": "2025-03-15T02:21:25.535489"
  },
  "ec6aac6f-9609-4b64-a3e4-75b8d8505eed": {
    "id": "ec6aac6f-9609-4b64-a3e4-75b8d8505eed",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:21:25.551192",
    "updated_at": "2025-03-15T02:21:25.551196"
  },
  "8ff35cea-0a74-419a-943f-fce84a49f115": {
    "id": "8ff35cea-0a74-419a-943f-fce84a49f115",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:21:32.307670",
    "updated_at": "2025-03-15T02:21:32.307677"
  },
  "458a26d3-d3f3-4435-8644-04851336d945": {
    "id": "458a26d3-d3f3-4435-8644-04851336d945",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:21:32.324351",
    "updated_at": "2025-03-15T02:21:32.324361"
  },
  "b3511ece-39d5-4ce5-b10e-df497537dc62": {
    "id": "b3511ece-39d5-4ce5-b10e-df497537dc62",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:21:32.340823",
    "updated_at": "2025-03-15T02:21:32.340832"
  },
  "c27e9af5-4b75-4780-bb1c-be523ff24b57": {
    "id": "c27e9af5-4b75-4780-bb1c-be523ff24b57",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:21:43.101289",
    "updated_at": "2025-03-15T02:21:43.101294"
  },
  "6b028166-eafe-49cb-bc12-57f8a0f043e2": {
    "id": "6b028166-eafe-49cb-bc12-57f8a0f043e2",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:21:43.118445",
    "updated_at": "2025-03-15T02:21:43.118448"
  },
  "b2fca64e-6266-47c7-9dd0-da31254c70a4": {
    "id": "b2fca64e-6266-47c7-9dd0-da31254c70a4",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:21:43.135477",
    "updated_at": "2025-03-15T02:21:43.135480"
  },
  "1e1c6a17-9903-48e6-98b4-8fa5a6ebfc8e": {
    "id": "1e1c6a17-9903-48e6-98b4-8fa5a6ebfc8e",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:21:50.583115",
    "updated_at": "2025-03-15T02:21:50.583120"
  },
  "7a5d9240-a430-476c-a837-3c1d91cf90a3": {
    "id": "7a5d9240-a430-476c-a837-3c1d91cf90a3",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:21:50.605852",
    "updated_at": "2025-03-15T02:21:50.605857"
  },
  "f1114a33-314c-4a5d-a53c-bf29b4ccef6c": {
    "id": "f1114a33-314c-4a5d-a53c-bf29b4ccef6c",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:21:50.638594",
    "updated_at": "2025-03-15T02:21:50.638603"
  },
  "6b04994c-e835-4243-88a1-245204b9bbfb": {
    "id": "6b04994c-e835-4243-88a1-245204b9bbfb",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:38:03.373981",
    "updated_at": "2025-03-15T02:38:03.373987"
  },
  "31ffb4a9-9536-4a4d-953f-5fa6d6187e6c": {
    "id": "31ffb4a9-9536-4a4d-953f-5fa6d6187e6c",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:38:03.405539",
    "updated_at": "2025-03-15T02:38:03.405545"
  },
  "dcf9fe77-0c6d-4234-a4e4-f902c7d0decb": {
    "id": "dcf9fe77-0c6d-4234-a4e4-f902c7d0decb",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:38:03.436633",
    "updated_at": "2025-03-15T02:38:03.436640"
  },
  "e82eb824-f34c-44d2-9657-ee2874dbddc7": {
    "id": "e82eb824-f34c-44d2-9657-ee2874dbddc7",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:38:11.508162",
    "updated_at": "2025-03-15T02:38:11.508168"
  },
  "ade01924-5da8-49b7-95e8-ac750f0c1558": {
    "id": "ade01924-5da8-49b7-95e8-ac750f0c1558",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:38:11.526062",
    "updated_at": "2025-03-15T02:38:11.526066"
  },
  "37349901-c0e4-44ce-b414-326e5d8b6f0f": {
    "id": "37349901-c0e4-44ce-b414-326e5d8b6f0f",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:38:11.544461",
    "updated_at": "2025-03-15T02:38:11.544464"
  },
  "ba153168-5af8-43b9-aad3-f20a241b9b40": {
    "id": "ba153168-5af8-43b9-aad3-f20a241b9b40",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:39:25.083080",
    "updated_at": "2025-03-15T02:39:25.083086"
  },
  "7b4d54ab-9708-4482-87ff-be5969fb9919": {
    "id": "7b4d54ab-9708-4482-87ff-be5969fb9919",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:39:25.101278",
    "updated_at": "2025-03-15T02:39:25.101282"
  },
  "56a728d7-b1ad-445c-aa18-507420db944e": {
    "id": "56a728d7-b1ad-445c-aa18-507420db944e",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:39:25.119302",
    "updated_at": "2025-03-15T02:39:25.119306"
  },
  "96a06811-fcf2-4ccd-9103-48b1710c948a": {
    "id": "96a06811-fcf2-4ccd-9103-48b1710c948a",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:39:38.715306",
    "updated_at": "2025-03-15T02:39:38.715313"
  },
  "471c7145-3add-4d2d-b2a1-683eb001ee23": {
    "id": "471c7145-3add-4d2d-b2a1-683eb001ee23",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:39:38.734136",
    "updated_at": "2025-03-15T02:39:38.734145"
  },
  "3accb2b3-8b74-4708-88e9-f8969b0be699": {
    "id": "3accb2b3-8b74-4708-88e9-f8969b0be699",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:39:38.752669",
    "updated_at": "2025-03-15T02:39:38.752676"
  },
  "8ce34681-e4b9-4306-a52d-b2df39df447c": {
    "id": "8ce34681-e4b9-4306-a52d-b2df39df447c",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:39:43.301607",
    "updated_at": "2025-03-15T02:39:43.301613"
  },
  "59e1d6f7-c7e1-4a55-a7e1-e8368e7e436d": {
    "id": "59e1d6f7-c7e1-4a55-a7e1-e8368e7e436d",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:39:43.328720",
    "updated_at": "2025-03-15T02:39:43.328727"
  },
  "ad7e66e1-d612-43f3-89b2-bf38f0811fcc": {
    "id": "ad7e66e1-d612-43f3-89b2-bf38f0811fcc",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:39:43.352519",
    "updated_at": "2025-03-15T02:39:43.352528"
  },
  "8ea8fd11-020c-4beb-bed8-99654e8e735b": {
    "id": "8ea8fd11-020c-4beb-bed8-99654e8e735b",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:39:49.614172",
    "updated_at": "2025-03-15T02:39:49.614177"
  },
  "7acf8d1e-1242-43e9-bad5-182e51d31230": {
    "id": "7acf8d1e-1242-43e9-bad5-182e51d31230",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:39:49.633485",
    "updated_at": "2025-03-15T02:39:49.633490"
  },
  "8276d397-909c-4746-bf82-cce2d23ec86f": {
    "id": "8276d397-909c-4746-bf82-cce2d23ec86f",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:39:49.652742",
    "updated_at": "2025-03-15T02:39:49.652747"
  },
  "f501dad0-ba3f-407f-983c-939bc016bc32": {
    "id": "f501dad0-ba3f-407f-983c-939bc016bc32",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:40:19.767642",
    "updated_at": "2025-03-15T02:40:19.767647"
  },
  "95f792c2-a716-43de-b5ac-1fb2f1064591": {
    "id": "95f792c2-a716-43de-b5ac-1fb2f1064591",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:40:19.787157",
    "updated_at": "2025-03-15T02:40:19.787161"
  },
  "e3b5f696-1867-4f55-a1b9-8b8db61e9ee8": {
    "id": "e3b5f696-1867-4f55-a1b9-8b8db61e9ee8",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:40:19.805914",
    "updated_at": "2025-03-15T02:40:19.805917"
  },
  "36434e92-ea83-476f-9f8f-d32c2d8771b2": {
    "id": "36434e92-ea83-476f-9f8f-d32c2d8771b2",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:40:23.007619",
    "updated_at": "2025-03-15T02:40:23.007626"
  },
  "0117ee62-e4a2-4862-bbef-104e54153b8d": {
    "id": "0117ee62-e4a2-4862-bbef-104e54153b8d",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:40:23.027936",
    "updated_at": "2025-03-15T02:40:23.027944"
  },
  "96285f7d-7139-48c2-8455-412102ab401f": {
    "id": "96285f7d-7139-48c2-8455-412102ab401f",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:40:23.054637",
    "updated_at": "2025-03-15T02:40:23.054644"
  },
  "1d46c3b7-d02e-4624-ba98-bf9fa94c060c": {
    "id": "1d46c3b7-d02e-4624-ba98-bf9fa94c060c",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:40:29.285646",
    "updated_at": "2025-03-15T02:40:29.285651"
  },
  "189a8313-d257-4b14-a641-712295ff545c": {
    "id": "189a8313-d257-4b14-a641-712295ff545c",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:40:29.305029",
    "updated_at": "2025-03-15T02:40:29.305049"
  },
  "484890ba-1a4f-4645-af38-515dbba9ab9d": {
    "id": "484890ba-1a4f-4645-af38-515dbba9ab9d",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:40:29.324446",
    "updated_at": "2025-03-15T02:40:29.324449"
  },
  "4cc76438-77e7-43e3-95d5-5b3b1b2b5217": {
    "id": "4cc76438-77e7-43e3-95d5-5b3b1b2b5217",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:40:59.383559",
    "updated_at": "2025-03-15T02:40:59.383565"
  },
  "e3e437af-0681-4543-868f-3c403a220336": {
    "id": "e3e437af-0681-4543-868f-3c403a220336",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:40:59.404164",
    "updated_at": "2025-03-15T02:40:59.404168"
  },
  "b2588414-6ae3-44b7-a822-42722d577fc9": {
    "id": "b2588414-6ae3-44b7-a822-42722d577fc9",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:40:59.424160",
    "updated_at": "2025-03-15T02:40:59.424167"
  },
  "90f5aaa0-4657-452d-8f49-06ea7b5bd20f": {
    "id": "90f5aaa0-4657-452d-8f49-06ea7b5bd20f",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:41:02.238068",
    "updated_at": "2025-03-15T02:41:02.238075"
  },
  "62d41f42-4be4-4995-ac50-c3e52ba6d3e8": {
    "id": "62d41f42-4be4-4995-ac50-c3e52ba6d3e8",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:41:02.276574",
    "updated_at": "2025-03-15T02:41:02.276583"
  },
  "60713870-0fd0-4ee1-9ef8-22492d730d9c": {
    "id": "60713870-0fd0-4ee1-9ef8-22492d730d9c",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:41:02.314806",
    "updated_at": "2025-03-15T02:41:02.314817"
  },
  "30ed3ba7-a214-4bc7-b6d9-bb2728f4b2ce": {
    "id": "30ed3ba7-a214-4bc7-b6d9-bb2728f4b2ce",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:41:08.999395",
    "updated_at": "2025-03-15T02:41:08.999400"
  },
  "2a59b6d1-7cc8-4b44-8e7c-8894d1b022aa": {
    "id": "2a59b6d1-7cc8-4b44-8e7c-8894d1b022aa",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:41:09.022785",
    "updated_at": "2025-03-15T02:41:09.022789"
  },
  "c724a806-c9ae-4301-988f-80d42665254a": {
    "id": "c724a806-c9ae-4301-988f-80d42665254a",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:41:09.046209",
    "updated_at": "2025-03-15T02:41:09.046212"
  },
  "6f456726-3872-4a4d-abd4-8b6b2750c588": {
    "id": "6f456726-3872-4a4d-abd4-8b6b2750c588",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:48:18.492523",
    "updated_at": "2025-03-15T02:48:18.492530"
  },
  "678673a3-a7d5-45d5-968f-cc6c06cfea74": {
    "id": "678673a3-a7d5-45d5-968f-cc6c06cfea74",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:48:18.534567",
    "updated_at": "2025-03-15T02:48:18.534576"
  },
  "610a5446-9367-4288-8a67-ab7a1c323134": {
    "id": "610a5446-9367-4288-8a67-ab7a1c323134",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:48:18.576828",
    "updated_at": "2025-03-15T02:48:18.576837"
  },
  "177c2097-494e-4b0b-9668-24899419b6d0": {
    "id": "177c2097-494e-4b0b-9668-24899419b6d0",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:52:38.668955",
    "updated_at": "2025-03-15T02:52:38.668960"
  },
  "b80c7fe8-7528-4e31-a891-69fdb70d5b30": {
    "id": "b80c7fe8-7528-4e31-a891-69fdb70d5b30",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:52:38.689945",
    "updated_at": "2025-03-15T02:52:38.689948"
  },
  "363b4654-ce17-407f-85d3-4495a5b18088": {
    "id": "363b4654-ce17-407f-85d3-4495a5b18088",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:52:38.711598",
    "updated_at": "2025-03-15T02:52:38.711601"
  },
  "45581b1e-0c47-4ce0-a254-6dc1154aac96": {
    "id": "45581b1e-0c47-4ce0-a254-6dc1154aac96",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:54:51.569630",
    "updated_at": "2025-03-15T02:54:51.569637"
  },
  "b47cbaa9-bcb2-4b35-9f09-5264d64cfced": {
    "id": "b47cbaa9-bcb2-4b35-9f09-5264d64cfced",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:54:51.608686",
    "updated_at": "2025-03-15T02:54:51.608694"
  },
  "cd1e7296-e19e-4bec-bf20-7d32e6857fa3": {
    "id": "cd1e7296-e19e-4bec-bf20-7d32e6857fa3",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:54:51.657598",
    "updated_at": "2025-03-15T02:54:51.657607"
  },
  "21afb60f-ddcd-4c49-8ed7-7168a9998ca2": {
    "id": "21afb60f-ddcd-4c49-8ed7-7168a9998ca2",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:54:53.451701",
    "updated_at": "2025-03-15T02:54:53.451707"
  },
  "6268c364-2bf4-4ef5-aad6-31bd056079c5": {
    "id": "6268c364-2bf4-4ef5-aad6-31bd056079c5",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:54:53.473889",
    "updated_at": "2025-03-15T02:54:53.473892"
  },
  "269e316c-814f-4040-86ca-b466b9605ffc": {
    "id": "269e316c-814f-4040-86ca-b466b9605ffc",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:54:53.495275",
    "updated_at": "2025-03-15T02:54:53.495278"
  },
  "abfc69b1-ee56-46ce-ace3-6499cc3b7834": {
    "id": "abfc69b1-ee56-46ce-ace3-6499cc3b7834",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:55:01.347936",
    "updated_at": "2025-03-15T02:55:01.347942"
  },
  "6da8ccd6-4ab0-47ea-a84f-b03052552e01": {
    "id": "6da8ccd6-4ab0-47ea-a84f-b03052552e01",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:55:01.374076",
    "updated_at": "2025-03-15T02:55:01.374196"
  },
  "8dc5afc5-c223-41a8-8c4c-9ec00b445365": {
    "id": "8dc5afc5-c223-41a8-8c4c-9ec00b445365",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:55:01.399397",
    "updated_at": "2025-03-15T02:55:01.399401"
  },
  "fd22cc6b-9e2a-489c-8298-2bf586691b8e": {
    "id": "fd22cc6b-9e2a-489c-8298-2bf586691b8e",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:56:01.276114",
    "updated_at": "2025-03-15T02:56:01.276121"
  },
  "505451b1-f705-42ca-bdad-d2527133d586": {
    "id": "505451b1-f705-42ca-bdad-d2527133d586",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:56:01.316897",
    "updated_at": "2025-03-15T02:56:01.316907"
  },
  "27dc2aab-f716-4ae6-99c4-2c5417d057db": {
    "id": "27dc2aab-f716-4ae6-99c4-2c5417d057db",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:56:01.357852",
    "updated_at": "2025-03-15T02:56:01.357861"
  },
  "6cf066c1-c997-4442-a056-51bb132ff912": {
    "id": "6cf066c1-c997-4442-a056-51bb132ff912",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:56:04.111102",
    "updated_at": "2025-03-15T02:56:04.111110"
  },
  "7978016b-024b-4efa-9ddc-f1107a6b9235": {
    "id": "7978016b-024b-4efa-9ddc-f1107a6b9235",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:56:04.154571",
    "updated_at": "2025-03-15T02:56:04.154581"
  },
  "23f72c66-bd0b-4907-811b-54ae488580f0": {
    "id": "23f72c66-bd0b-4907-811b-54ae488580f0",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:56:04.203544",
    "updated_at": "2025-03-15T02:56:04.203553"
  },
  "76c77899-5c91-485d-9d95-01b2fd39e56e": {
    "id": "76c77899-5c91-485d-9d95-01b2fd39e56e",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:56:09.922909",
    "updated_at": "2025-03-15T02:56:09.922915"
  },
  "ca8ed3e7-6396-45c3-a584-e5e8ab0d5f0c": {
    "id": "ca8ed3e7-6396-45c3-a584-e5e8ab0d5f0c",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:56:09.948594",
    "updated_at": "2025-03-15T02:56:09.948602"
  },
  "728c6c9b-52b7-40b1-be59-443927a774c8": {
    "id": "728c6c9b-52b7-40b1-be59-443927a774c8",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:56:09.972507",
    "updated_at": "2025-03-15T02:56:09.972511"
  },
  "aadbc244-bc91-42a1-bd6d-b342e6659caa": {
    "id": "aadbc244-bc91-42a1-bd6d-b342e6659caa",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:57:03.342876",
    "updated_at": "2025-03-15T02:57:03.342886"
  },
  "12f3e8b2-82e5-40b4-a011-3874f9613838": {
    "id": "12f3e8b2-82e5-40b4-a011-3874f9613838",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:57:03.386805",
    "updated_at": "2025-03-15T02:57:03.386814"
  },
  "8fceeb3c-8e77-43dd-9c18-f6550e3ae006": {
    "id": "8fceeb3c-8e77-43dd-9c18-f6550e3ae006",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:57:03.428358",
    "updated_at": "2025-03-15T02:57:03.428366"
  },
  "db22a659-85d1-4e92-bf03-a099c0496b85": {
    "id": "db22a659-85d1-4e92-bf03-a099c0496b85",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:57:08.339822",
    "updated_at": "2025-03-15T02:57:08.339828"
  },
  "28f190a0-f0e1-4d30-87eb-d2578b701b6c": {
    "id": "28f190a0-f0e1-4d30-87eb-d2578b701b6c",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:57:08.363428",
    "updated_at": "2025-03-15T02:57:08.363432"
  },
  "bb0aa7e2-7d60-4c7f-b5c9-39ba079a8cee": {
    "id": "bb0aa7e2-7d60-4c7f-b5c9-39ba079a8cee",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:57:08.387050",
    "updated_at": "2025-03-15T02:57:08.387052"
  },
  "5725a762-39aa-477a-94e1-b0701b67e009": {
    "id": "5725a762-39aa-477a-94e1-b0701b67e009",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:58:20.848024",
    "updated_at": "2025-03-15T02:58:20.848031"
  },
  "3486a48b-00f2-4769-b5fb-5ce23fcdc77e": {
    "id": "3486a48b-00f2-4769-b5fb-5ce23fcdc77e",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:58:20.879947",
    "updated_at": "2025-03-15T02:58:20.879955"
  },
  "01b1289f-e467-4b6e-a7d3-bf1e34ddafd2": {
    "id": "01b1289f-e467-4b6e-a7d3-bf1e34ddafd2",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:58:20.915184",
    "updated_at": "2025-03-15T02:58:20.915190"
  },
  "49d5ab33-c097-48a2-b52b-d04692969a3e": {
    "id": "49d5ab33-c097-48a2-b52b-d04692969a3e",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:59:29.443434",
    "updated_at": "2025-03-15T02:59:29.443440"
  },
  "a5529f2a-c45a-4203-8a3a-50f7c2a11d83": {
    "id": "a5529f2a-c45a-4203-8a3a-50f7c2a11d83",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:59:29.488432",
    "updated_at": "2025-03-15T02:59:29.488441"
  },
  "350e47ac-cb9e-4e29-abf0-38b4cff8dc15": {
    "id": "350e47ac-cb9e-4e29-abf0-38b4cff8dc15",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:59:29.531660",
    "updated_at": "2025-03-15T02:59:29.531669"
  },
  "99ebfc54-f04e-47ef-8103-d45ced163ad9": {
    "id": "99ebfc54-f04e-47ef-8103-d45ced163ad9",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:59:40.419405",
    "updated_at": "2025-03-15T02:59:40.419410"
  },
  "33cad2dd-57b1-47e4-803d-b1080d84b35d": {
    "id": "33cad2dd-57b1-47e4-803d-b1080d84b35d",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:59:40.443994",
    "updated_at": "2025-03-15T02:59:40.443998"
  },
  "9fd45dee-9c17-4dcf-8d61-a3fbcd0ab6e2": {
    "id": "9fd45dee-9c17-4dcf-8d61-a3fbcd0ab6e2",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:59:40.469000",
    "updated_at": "2025-03-15T02:59:40.469002"
  },
  "de81c01a-f0ae-4c4d-90d6-b2d8699b3a90": {
    "id": "de81c01a-f0ae-4c4d-90d6-b2d8699b3a90",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:59:43.909210",
    "updated_at": "2025-03-15T02:59:43.909215"
  },
  "c85dff0c-ec7b-4625-83c8-648392a21088": {
    "id": "c85dff0c-ec7b-4625-83c8-648392a21088",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:59:43.938039",
    "updated_at": "2025-03-15T02:59:43.938045"
  },
  "2b1dc288-4520-4d5a-a53b-b3c3b528070f": {
    "id": "2b1dc288-4520-4d5a-a53b-b3c3b528070f",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:59:43.967370",
    "updated_at": "2025-03-15T02:59:43.967377"
  },
  "c2cf8919-c8b9-4b7e-8c4e-e91fb61a1d1b": {
    "id": "c2cf8919-c8b9-4b7e-8c4e-e91fb61a1d1b",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:59:51.513344",
    "updated_at": "2025-03-15T02:59:51.513349"
  },
  "eda7a2ba-bdcc-4a4b-a652-354948c38ced": {
    "id": "eda7a2ba-bdcc-4a4b-a652-354948c38ced",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:59:51.539900",
    "updated_at": "2025-03-15T02:59:51.539905"
  },
  "f046438b-811f-4b38-b2d7-68882e9ab665": {
    "id": "f046438b-811f-4b38-b2d7-68882e9ab665",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T02:59:51.566889",
    "updated_at": "2025-03-15T02:59:51.566893"
  },
  "714c2027-7172-4257-93e8-891277ec5edc": {
    "id": "714c2027-7172-4257-93e8-891277ec5edc",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:06:27.062349",
    "updated_at": "2025-03-15T03:06:27.062355"
  },
  "2adbc9fd-86ab-4df8-8fc2-94d679428f82": {
    "id": "2adbc9fd-86ab-4df8-8fc2-94d679428f82",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:06:27.088141",
    "updated_at": "2025-03-15T03:06:27.088147"
  },
  "e496494b-a923-41b1-99f3-1153439935a8": {
    "id": "e496494b-a923-41b1-99f3-1153439935a8",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:06:27.114120",
    "updated_at": "2025-03-15T03:06:27.114127"
  },
  "d7fba519-5b45-4ade-b832-9c166ed2d840": {
    "id": "d7fba519-5b45-4ade-b832-9c166ed2d840",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:13:31.575717",
    "updated_at": "2025-03-15T03:13:31.575725"
  },
  "534f8002-4564-4940-90b5-f1fe1b20e5d3": {
    "id": "534f8002-4564-4940-90b5-f1fe1b20e5d3",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:13:31.621511",
    "updated_at": "2025-03-15T03:13:31.621520"
  },
  "6376a786-53e1-4ca6-98fb-d1e1ca329a77": {
    "id": "6376a786-53e1-4ca6-98fb-d1e1ca329a77",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:13:31.668182",
    "updated_at": "2025-03-15T03:13:31.668191"
  },
  "8b21292e-17b2-482c-9423-f3f3c24e71aa": {
    "id": "8b21292e-17b2-482c-9423-f3f3c24e71aa",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:13:34.092105",
    "updated_at": "2025-03-15T03:13:34.092113"
  },
  "3e329dae-a499-43e1-95f2-4f2b8708d443": {
    "id": "3e329dae-a499-43e1-95f2-4f2b8708d443",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:13:34.122390",
    "updated_at": "2025-03-15T03:13:34.122401"
  },
  "56e932ed-42a7-4d13-a93b-6b37f54369c8": {
    "id": "56e932ed-42a7-4d13-a93b-6b37f54369c8",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:13:34.156221",
    "updated_at": "2025-03-15T03:13:34.156228"
  },
  "3de31bfb-0f5a-480e-9be3-f984c2f1f3d5": {
    "id": "3de31bfb-0f5a-480e-9be3-f984c2f1f3d5",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:13:40.595150",
    "updated_at": "2025-03-15T03:13:40.595156"
  },
  "978b30a5-b925-4546-b52d-120d0ecc79c1": {
    "id": "978b30a5-b925-4546-b52d-120d0ecc79c1",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:13:40.631378",
    "updated_at": "2025-03-15T03:13:40.631388"
  },
  "e2daf1c6-11f8-4b1d-a64c-753903f34c39": {
    "id": "e2daf1c6-11f8-4b1d-a64c-753903f34c39",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:13:40.667116",
    "updated_at": "2025-03-15T03:13:40.667122"
  },
  "7ed9505d-053f-4efc-94ba-2ff35b925128": {
    "id": "7ed9505d-053f-4efc-94ba-2ff35b925128",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:14:20.610540",
    "updated_at": "2025-03-15T03:14:20.610546"
  },
  "fcb4405d-7a54-466c-9cf1-e44815c44d8d": {
    "id": "fcb4405d-7a54-466c-9cf1-e44815c44d8d",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:14:20.638734",
    "updated_at": "2025-03-15T03:14:20.638743"
  },
  "972143d5-5e87-4e0a-878c-5a52c8abadee": {
    "id": "972143d5-5e87-4e0a-878c-5a52c8abadee",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:14:20.666327",
    "updated_at": "2025-03-15T03:14:20.666333"
  },
  "4715fe23-a7c4-4488-8a78-d60fe1399a45": {
    "id": "4715fe23-a7c4-4488-8a78-d60fe1399a45",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:14:23.293645",
    "updated_at": "2025-03-15T03:14:23.293651"
  },
  "b7612019-158f-477a-b5fb-133971edfcaf": {
    "id": "b7612019-158f-477a-b5fb-133971edfcaf",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:14:23.337473",
    "updated_at": "2025-03-15T03:14:23.337482"
  },
  "2f1456d3-77bf-4542-8e67-aae578039854": {
    "id": "2f1456d3-77bf-4542-8e67-aae578039854",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:14:23.380451",
    "updated_at": "2025-03-15T03:14:23.380462"
  },
  "dfdc196a-1f8d-489a-a8e9-aafe99c1fc00": {
    "id": "dfdc196a-1f8d-489a-a8e9-aafe99c1fc00",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:14:30.174186",
    "updated_at": "2025-03-15T03:14:30.174191"
  },
  "701f611b-e11d-4993-9ae1-1c6bff7c2094": {
    "id": "701f611b-e11d-4993-9ae1-1c6bff7c2094",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:14:30.201893",
    "updated_at": "2025-03-15T03:14:30.201898"
  },
  "94c2c76f-8dba-40b8-ab04-f05601607020": {
    "id": "94c2c76f-8dba-40b8-ab04-f05601607020",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:14:30.229683",
    "updated_at": "2025-03-15T03:14:30.229690"
  },
  "f0370392-fbce-4b92-8987-2da7bba266d8": {
    "id": "f0370392-fbce-4b92-8987-2da7bba266d8",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:25:57.441033",
    "updated_at": "2025-03-15T03:25:57.441039"
  },
  "460ce3a7-df1b-410f-9925-fea1f9b301a8": {
    "id": "460ce3a7-df1b-410f-9925-fea1f9b301a8",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:25:57.493681",
    "updated_at": "2025-03-15T03:25:57.493690"
  },
  "6850371a-84dc-473d-9fd0-0f4c8785f6ef": {
    "id": "6850371a-84dc-473d-9fd0-0f4c8785f6ef",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:25:57.523564",
    "updated_at": "2025-03-15T03:25:57.523573"
  },
  "16f5050d-ab43-4954-b499-b5e4b45beceb": {
    "id": "16f5050d-ab43-4954-b499-b5e4b45beceb",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:43:26.016675",
    "updated_at": "2025-03-15T03:43:26.016681"
  },
  "4354e9be-5e8f-4ee8-b24d-e6584a3e7639": {
    "id": "4354e9be-5e8f-4ee8-b24d-e6584a3e7639",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:43:26.067627",
    "updated_at": "2025-03-15T03:43:26.067637"
  },
  "4d0c1529-a972-4158-aad1-894cd9d005d6": {
    "id": "4d0c1529-a972-4158-aad1-894cd9d005d6",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:43:26.117486",
    "updated_at": "2025-03-15T03:43:26.117497"
  },
  "b484c087-f60d-4d63-9ee1-f09f48d6cd99": {
    "id": "b484c087-f60d-4d63-9ee1-f09f48d6cd99",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:43:28.746874",
    "updated_at": "2025-03-15T03:43:28.746883"
  },
  "d9584da7-5df5-4448-8ac1-447fbbd458b5": {
    "id": "d9584da7-5df5-4448-8ac1-447fbbd458b5",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:43:28.798085",
    "updated_at": "2025-03-15T03:43:28.798096"
  },
  "36180974-da70-46da-a6ce-3b6668062446": {
    "id": "36180974-da70-46da-a6ce-3b6668062446",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:43:28.849844",
    "updated_at": "2025-03-15T03:43:28.849853"
  },
  "71eaf847-0897-40a0-8ec3-86bf68270ba1": {
    "id": "71eaf847-0897-40a0-8ec3-86bf68270ba1",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:43:34.294912",
    "updated_at": "2025-03-15T03:43:34.294920"
  },
  "be390213-e2c4-44a0-bb9d-9ea8bd315acb": {
    "id": "be390213-e2c4-44a0-bb9d-9ea8bd315acb",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:43:34.346868",
    "updated_at": "2025-03-15T03:43:34.346878"
  },
  "25d6364c-0902-4ce9-8fd1-5002f9d61819": {
    "id": "25d6364c-0902-4ce9-8fd1-5002f9d61819",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:43:34.397847",
    "updated_at": "2025-03-15T03:43:34.397856"
  },
  "1d42254a-9884-4de9-92bc-7d41ee441c63": {
    "id": "1d42254a-9884-4de9-92bc-7d41ee441c63",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:43:36.865361",
    "updated_at": "2025-03-15T03:43:36.865368"
  },
  "193e7ec7-b4b8-4527-9aa8-2f6cfece6b11": {
    "id": "193e7ec7-b4b8-4527-9aa8-2f6cfece6b11",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:43:36.917316",
    "updated_at": "2025-03-15T03:43:36.917325"
  },
  "2dda900b-3c72-44f3-bfdf-26f1481810db": {
    "id": "2dda900b-3c72-44f3-bfdf-26f1481810db",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:43:36.968865",
    "updated_at": "2025-03-15T03:43:36.968875"
  },
  "0cde07e4-3bbf-4eea-b420-76ff2e5bdcea": {
    "id": "0cde07e4-3bbf-4eea-b420-76ff2e5bdcea",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:44:49.300556",
    "updated_at": "2025-03-15T03:44:49.300562"
  },
  "606da812-6bed-4878-8d23-9123434fcace": {
    "id": "606da812-6bed-4878-8d23-9123434fcace",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:44:49.355018",
    "updated_at": "2025-03-15T03:44:49.355026"
  },
  "80111322-14c3-4872-bf7e-b61f07fc27d9": {
    "id": "80111322-14c3-4872-bf7e-b61f07fc27d9",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:44:49.409559",
    "updated_at": "2025-03-15T03:44:49.409567"
  },
  "8bf9c2d0-d190-4634-a7f0-e16132df8aed": {
    "id": "8bf9c2d0-d190-4634-a7f0-e16132df8aed",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:44:52.910602",
    "updated_at": "2025-03-15T03:44:52.910608"
  },
  "b18e66ef-065f-4407-b55e-2c37d3ede84d": {
    "id": "b18e66ef-065f-4407-b55e-2c37d3ede84d",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:44:52.964686",
    "updated_at": "2025-03-15T03:44:52.964696"
  },
  "7cd9edc0-c0d2-460d-a30b-8a1bc7232a08": {
    "id": "7cd9edc0-c0d2-460d-a30b-8a1bc7232a08",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:44:53.018578",
    "updated_at": "2025-03-15T03:44:53.018588"
  },
  "43c5d0e6-0037-4a63-a666-3d9e956d3ce9": {
    "id": "43c5d0e6-0037-4a63-a666-3d9e956d3ce9",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:46:54.505405",
    "updated_at": "2025-03-15T03:46:54.505414"
  },
  "d3e03bb0-11c9-4c2f-a717-e31153221a29": {
    "id": "d3e03bb0-11c9-4c2f-a717-e31153221a29",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:46:54.556800",
    "updated_at": "2025-03-15T03:46:54.556809"
  },
  "f4755d25-da3c-4895-8628-e0251274e479": {
    "id": "f4755d25-da3c-4895-8628-e0251274e479",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:46:54.589536",
    "updated_at": "2025-03-15T03:46:54.589545"
  },
  "3ed9ec5c-5377-4550-99d7-52956426258b": {
    "id": "3ed9ec5c-5377-4550-99d7-52956426258b",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:46:58.465840",
    "updated_at": "2025-03-15T03:46:58.465846"
  },
  "4007ccf5-3650-4a4f-b6b3-a41d641b1399": {
    "id": "4007ccf5-3650-4a4f-b6b3-a41d641b1399",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:46:58.497556",
    "updated_at": "2025-03-15T03:46:58.497560"
  },
  "45811573-6507-439e-b988-3b30b6b010dc": {
    "id": "45811573-6507-439e-b988-3b30b6b010dc",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:46:58.529581",
    "updated_at": "2025-03-15T03:46:58.529585"
  },
  "73e4d147-9d88-427e-a9c2-95ae7159b446": {
    "id": "73e4d147-9d88-427e-a9c2-95ae7159b446",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:47:13.995516",
    "updated_at": "2025-03-15T03:47:13.995522"
  },
  "bcf87a9a-8fa5-4252-a49c-a3304725c72a": {
    "id": "bcf87a9a-8fa5-4252-a49c-a3304725c72a",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:47:14.025481",
    "updated_at": "2025-03-15T03:47:14.025487"
  },
  "b7b33759-728c-4a2a-a796-1af13ee66d18": {
    "id": "b7b33759-728c-4a2a-a796-1af13ee66d18",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:47:14.056185",
    "updated_at": "2025-03-15T03:47:14.056190"
  },
  "a7fc362c-74c2-4577-8f6b-c9abef70abd1": {
    "id": "a7fc362c-74c2-4577-8f6b-c9abef70abd1",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:47:48.502659",
    "updated_at": "2025-03-15T03:47:48.502666"
  },
  "37c32adf-6948-4bdc-b00d-95c1c8604b83": {
    "id": "37c32adf-6948-4bdc-b00d-95c1c8604b83",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:47:48.537748",
    "updated_at": "2025-03-15T03:47:48.537757"
  },
  "fed4d84a-4876-4740-a977-29fe587ccbdf": {
    "id": "fed4d84a-4876-4740-a977-29fe587ccbdf",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:47:48.571209",
    "updated_at": "2025-03-15T03:47:48.571216"
  },
  "9b7748de-744a-42dd-8471-d57e00666a16": {
    "id": "9b7748de-744a-42dd-8471-d57e00666a16",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:47:52.128768",
    "updated_at": "2025-03-15T03:47:52.128780"
  },
  "703d7ca9-8605-416e-9cfd-2c1603c50b65": {
    "id": "703d7ca9-8605-416e-9cfd-2c1603c50b65",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:47:52.185338",
    "updated_at": "2025-03-15T03:47:52.185348"
  },
  "ff6ecfec-76ae-4eb0-bf5a-ec5256d86d58": {
    "id": "ff6ecfec-76ae-4eb0-bf5a-ec5256d86d58",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:47:52.242600",
    "updated_at": "2025-03-15T03:47:52.242610"
  },
  "644477cc-b3b4-4f8a-a959-7975854565ea": {
    "id": "644477cc-b3b4-4f8a-a959-7975854565ea",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:47:54.067785",
    "updated_at": "2025-03-15T03:47:54.067791"
  },
  "3faf09ef-aff3-4c90-83b3-f392d7846b2f": {
    "id": "3faf09ef-aff3-4c90-83b3-f392d7846b2f",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:47:54.100031",
    "updated_at": "2025-03-15T03:47:54.100035"
  },
  "19973815-94e5-4824-9c84-8ee84a4dd3af": {
    "id": "19973815-94e5-4824-9c84-8ee84a4dd3af",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:47:54.133144",
    "updated_at": "2025-03-15T03:47:54.133149"
  },
  "3569ad7d-6651-415d-95fe-8911ea68b9c1": {
    "id": "3569ad7d-6651-415d-95fe-8911ea68b9c1",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:48:01.021031",
    "updated_at": "2025-03-15T03:48:01.021036"
  },
  "d3095aa5-31c5-4a8a-bac8-c8d08e1f80b7": {
    "id": "d3095aa5-31c5-4a8a-bac8-c8d08e1f80b7",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:48:01.052683",
    "updated_at": "2025-03-15T03:48:01.052687"
  },
  "5a7486d8-8537-435e-b2ca-30d984bad683": {
    "id": "5a7486d8-8537-435e-b2ca-30d984bad683",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:48:01.086028",
    "updated_at": "2025-03-15T03:48:01.086035"
  },
  "ad555b4c-10d5-4077-8c04-c4e027c4b209": {
    "id": "ad555b4c-10d5-4077-8c04-c4e027c4b209",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:57:56.187220",
    "updated_at": "2025-03-15T03:57:56.187226"
  },
  "f2b8fe20-42c7-4acb-a5bc-59d9d4f4a6ca": {
    "id": "f2b8fe20-42c7-4acb-a5bc-59d9d4f4a6ca",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:57:56.219093",
    "updated_at": "2025-03-15T03:57:56.219097"
  },
  "dbbe6ab5-0980-47d1-885b-a0a4807dec78": {
    "id": "dbbe6ab5-0980-47d1-885b-a0a4807dec78",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:57:56.250185",
    "updated_at": "2025-03-15T03:57:56.250189"
  },
  "d042fbb7-c1d1-44e6-b3de-094f8927b6b0": {
    "id": "d042fbb7-c1d1-44e6-b3de-094f8927b6b0",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:58:00.493446",
    "updated_at": "2025-03-15T03:58:00.493453"
  },
  "52cfce2a-0654-43e8-b22f-2dd7930a80f7": {
    "id": "52cfce2a-0654-43e8-b22f-2dd7930a80f7",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:58:00.527471",
    "updated_at": "2025-03-15T03:58:00.527482"
  },
  "5930724b-8216-485e-9242-eb66477194d3": {
    "id": "5930724b-8216-485e-9242-eb66477194d3",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:58:00.560821",
    "updated_at": "2025-03-15T03:58:00.560825"
  },
  "230752d3-4dc6-43be-99d2-3f03f2809f74": {
    "id": "230752d3-4dc6-43be-99d2-3f03f2809f74",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:58:08.935580",
    "updated_at": "2025-03-15T03:58:08.935586"
  },
  "d7c3b545-37e1-46aa-bb7b-06a4135fa756": {
    "id": "d7c3b545-37e1-46aa-bb7b-06a4135fa756",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:58:08.969234",
    "updated_at": "2025-03-15T03:58:08.969239"
  },
  "5f34a4e6-011c-4ea4-97a0-eea4b8c97fff": {
    "id": "5f34a4e6-011c-4ea4-97a0-eea4b8c97fff",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:58:09.003102",
    "updated_at": "2025-03-15T03:58:09.003106"
  },
  "94a3b668-8334-496b-b22f-04bb5960d00d": {
    "id": "94a3b668-8334-496b-b22f-04bb5960d00d",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:59:33.008776",
    "updated_at": "2025-03-15T03:59:33.008783"
  },
  "b7172115-6131-451c-a0e7-28116801e3e9": {
    "id": "b7172115-6131-451c-a0e7-28116801e3e9",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:59:33.068710",
    "updated_at": "2025-03-15T03:59:33.068720"
  },
  "bdab7036-f60c-41ea-b65f-c4df0ebac4d7": {
    "id": "bdab7036-f60c-41ea-b65f-c4df0ebac4d7",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:59:33.129681",
    "updated_at": "2025-03-15T03:59:33.129691"
  },
  "8399a4c5-28c5-4089-8914-d979c8609ccb": {
    "id": "8399a4c5-28c5-4089-8914-d979c8609ccb",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:59:35.442165",
    "updated_at": "2025-03-15T03:59:35.442173"
  },
  "536882a7-61bc-4c12-ac66-5c581dbb8d70": {
    "id": "536882a7-61bc-4c12-ac66-5c581dbb8d70",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:59:35.498836",
    "updated_at": "2025-03-15T03:59:35.498846"
  },
  "9c3e8d8b-7c0f-4de5-be97-fa70cb2dc411": {
    "id": "9c3e8d8b-7c0f-4de5-be97-fa70cb2dc411",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:59:35.561340",
    "updated_at": "2025-03-15T03:59:35.561350"
  },
  "3001504f-bd5a-4f2f-bec6-2145a917218f": {
    "id": "3001504f-bd5a-4f2f-bec6-2145a917218f",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:59:42.457302",
    "updated_at": "2025-03-15T03:59:42.457308"
  },
  "35cb154b-dd82-4669-aab6-278453b1b824": {
    "id": "35cb154b-dd82-4669-aab6-278453b1b824",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:59:42.491238",
    "updated_at": "2025-03-15T03:59:42.491243"
  },
  "21d723b0-90c5-4987-b47f-d83f651f7537": {
    "id": "21d723b0-90c5-4987-b47f-d83f651f7537",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T03:59:42.526363",
    "updated_at": "2025-03-15T03:59:42.526370"
  },
  "116cc8dd-8f14-47ff-9063-b62475b15e18": {
    "id": "116cc8dd-8f14-47ff-9063-b62475b15e18",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:23:18.864543",
    "updated_at": "2025-03-15T04:23:18.864548"
  },
  "b2ae68cb-700d-41b2-a273-9050ef693eb0": {
    "id": "b2ae68cb-700d-41b2-a273-9050ef693eb0",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:23:18.927444",
    "updated_at": "2025-03-15T04:23:18.927451"
  },
  "f61b5cc6-ffb1-4a24-97b0-f019dc6d8633": {
    "id": "f61b5cc6-ffb1-4a24-97b0-f019dc6d8633",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:23:18.972981",
    "updated_at": "2025-03-15T04:23:18.972988"
  },
  "f9256285-6e1a-42c4-9bc6-d19454c9836d": {
    "id": "f9256285-6e1a-42c4-9bc6-d19454c9836d",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:33:32.473771",
    "updated_at": "2025-03-15T04:33:32.473780"
  },
  "1d2a5045-6add-4fd9-9365-7943713b0e49": {
    "id": "1d2a5045-6add-4fd9-9365-7943713b0e49",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:33:32.534807",
    "updated_at": "2025-03-15T04:33:32.534818"
  },
  "c3663ba2-803b-4d05-92b2-6e84c1e84a9b": {
    "id": "c3663ba2-803b-4d05-92b2-6e84c1e84a9b",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:33:32.581653",
    "updated_at": "2025-03-15T04:33:32.581662"
  },
  "188f7398-decd-4c53-853a-d10a76a3423a": {
    "id": "188f7398-decd-4c53-853a-d10a76a3423a",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:33:35.326583",
    "updated_at": "2025-03-15T04:33:35.326589"
  },
  "6952761c-5489-4035-9746-00365ae5fa0c": {
    "id": "6952761c-5489-4035-9746-00365ae5fa0c",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:33:35.360946",
    "updated_at": "2025-03-15T04:33:35.360952"
  },
  "fb33bdc7-07f4-4671-991d-41196275e0ad": {
    "id": "fb33bdc7-07f4-4671-991d-41196275e0ad",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:33:35.406811",
    "updated_at": "2025-03-15T04:33:35.406820"
  },
  "c2d8ae5d-482a-4ece-b8e4-a649d705d860": {
    "id": "c2d8ae5d-482a-4ece-b8e4-a649d705d860",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:33:48.337677",
    "updated_at": "2025-03-15T04:33:48.337686"
  },
  "8a6744a6-2f99-4e0c-9143-188067bed1bb": {
    "id": "8a6744a6-2f99-4e0c-9143-188067bed1bb",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:33:48.405911",
    "updated_at": "2025-03-15T04:33:48.405921"
  },
  "64131413-c382-46ed-9095-50e52edf3c41": {
    "id": "64131413-c382-46ed-9095-50e52edf3c41",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:33:48.451812",
    "updated_at": "2025-03-15T04:33:48.451820"
  },
  "a199fc79-9ec6-4f7a-b76a-55ad975c6dd3": {
    "id": "a199fc79-9ec6-4f7a-b76a-55ad975c6dd3",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:37:37.170619",
    "updated_at": "2025-03-15T04:37:37.170625"
  },
  "bcd3317b-20a9-496f-a78c-a26977aa73a5": {
    "id": "bcd3317b-20a9-496f-a78c-a26977aa73a5",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:37:37.232513",
    "updated_at": "2025-03-15T04:37:37.232522"
  },
  "568f30f8-478e-473e-9168-b70bfad22c09": {
    "id": "568f30f8-478e-473e-9168-b70bfad22c09",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:37:37.304548",
    "updated_at": "2025-03-15T04:37:37.304557"
  },
  "0d748f86-8f13-41a3-8aaa-a75218e9a532": {
    "id": "0d748f86-8f13-41a3-8aaa-a75218e9a532",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:37:39.461251",
    "updated_at": "2025-03-15T04:37:39.461256"
  },
  "9bd5991a-293e-4a2f-929f-88f495302506": {
    "id": "9bd5991a-293e-4a2f-929f-88f495302506",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:37:39.496589",
    "updated_at": "2025-03-15T04:37:39.496594"
  },
  "5c4ef13a-3a15-4c3a-8f15-2079a9b79da3": {
    "id": "5c4ef13a-3a15-4c3a-8f15-2079a9b79da3",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:37:39.540959",
    "updated_at": "2025-03-15T04:37:39.540963"
  },
  "62e7a7ee-aa67-4a65-8b6f-b4cb7106b4aa": {
    "id": "62e7a7ee-aa67-4a65-8b6f-b4cb7106b4aa",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:37:54.000146",
    "updated_at": "2025-03-15T04:37:54.000152"
  },
  "6231bd25-1bdb-4e7c-bbeb-274aaff49b81": {
    "id": "6231bd25-1bdb-4e7c-bbeb-274aaff49b81",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:37:54.036466",
    "updated_at": "2025-03-15T04:37:54.036470"
  },
  "7e6d6bee-f0b9-4c1b-8c9c-c7e49d47af43": {
    "id": "7e6d6bee-f0b9-4c1b-8c9c-c7e49d47af43",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:37:54.076829",
    "updated_at": "2025-03-15T04:37:54.076840"
  },
  "d8ce927e-dc3d-4749-96e2-82392c6f5688": {
    "id": "d8ce927e-dc3d-4749-96e2-82392c6f5688",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:37:56.410286",
    "updated_at": "2025-03-15T04:37:56.410292"
  },
  "3ee77565-96ff-48ec-94a5-b259985e798a": {
    "id": "3ee77565-96ff-48ec-94a5-b259985e798a",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:37:56.446636",
    "updated_at": "2025-03-15T04:37:56.446641"
  },
  "31f8336f-1cf3-4481-820d-c00c577a4b90": {
    "id": "31f8336f-1cf3-4481-820d-c00c577a4b90",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:37:56.482060",
    "updated_at": "2025-03-15T04:37:56.482065"
  },
  "e594b009-c049-4a98-85c4-a0bf6a18f0cd": {
    "id": "e594b009-c049-4a98-85c4-a0bf6a18f0cd",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:38:08.598342",
    "updated_at": "2025-03-15T04:38:08.598349"
  },
  "102bf059-187c-4904-ab4e-9a313e2e3434": {
    "id": "102bf059-187c-4904-ab4e-9a313e2e3434",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:38:08.665885",
    "updated_at": "2025-03-15T04:38:08.665895"
  },
  "b9543739-0e4b-4fd9-9fbd-0f33d83bb31e": {
    "id": "b9543739-0e4b-4fd9-9fbd-0f33d83bb31e",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:38:08.714035",
    "updated_at": "2025-03-15T04:38:08.714049"
  },
  "710e7aad-b89b-4cae-a1f8-80f1f9640043": {
    "id": "710e7aad-b89b-4cae-a1f8-80f1f9640043",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:39:54.386193",
    "updated_at": "2025-03-15T04:39:54.386200"
  },
  "d8c680b3-a8d2-4f8f-9673-88ac357aa124": {
    "id": "d8c680b3-a8d2-4f8f-9673-88ac357aa124",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:39:54.423897",
    "updated_at": "2025-03-15T04:39:54.423905"
  },
  "f385f681-fddb-4338-9d45-deab4c098c8d": {
    "id": "f385f681-fddb-4338-9d45-deab4c098c8d",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:39:54.463028",
    "updated_at": "2025-03-15T04:39:54.463036"
  },
  "ba766209-91d4-4271-b2ba-f965811c4e4f": {
    "id": "ba766209-91d4-4271-b2ba-f965811c4e4f",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:40:01.636208",
    "updated_at": "2025-03-15T04:40:01.636214"
  },
  "382da323-1898-4922-ba03-43d586faa7cc": {
    "id": "382da323-1898-4922-ba03-43d586faa7cc",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:40:01.672804",
    "updated_at": "2025-03-15T04:40:01.672809"
  },
  "4603cf9e-d7c9-40ee-83fa-13a9d3ecd177": {
    "id": "4603cf9e-d7c9-40ee-83fa-13a9d3ecd177",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:40:01.709745",
    "updated_at": "2025-03-15T04:40:01.709750"
  },
  "4bb3b198-d686-4fe0-af42-a4986f5625a5": {
    "id": "4bb3b198-d686-4fe0-af42-a4986f5625a5",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:40:22.920315",
    "updated_at": "2025-03-15T04:40:22.920320"
  },
  "a8f47132-69fe-4fca-bff4-622e7083e8fa": {
    "id": "a8f47132-69fe-4fca-bff4-622e7083e8fa",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:40:22.957890",
    "updated_at": "2025-03-15T04:40:22.957894"
  },
  "e773892f-e481-402d-9572-985a1c1354db": {
    "id": "e773892f-e481-402d-9572-985a1c1354db",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:40:22.996944",
    "updated_at": "2025-03-15T04:40:22.996949"
  },
  "c089cbbb-b6b3-46c2-99c2-6c79f7781a8d": {
    "id": "c089cbbb-b6b3-46c2-99c2-6c79f7781a8d",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:40:28.916082",
    "updated_at": "2025-03-15T04:40:28.916088"
  },
  "beadae97-be18-41f9-91f3-f53076d8fbac": {
    "id": "beadae97-be18-41f9-91f3-f53076d8fbac",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:40:28.953681",
    "updated_at": "2025-03-15T04:40:28.953687"
  },
  "46e03cb4-7eb6-4658-a586-d98e3a367b1b": {
    "id": "46e03cb4-7eb6-4658-a586-d98e3a367b1b",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:40:28.996383",
    "updated_at": "2025-03-15T04:40:28.996387"
  },
  "cf6c00b2-ad65-4946-8748-17edb7ed6ff6": {
    "id": "cf6c00b2-ad65-4946-8748-17edb7ed6ff6",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:40:44.040331",
    "updated_at": "2025-03-15T04:40:44.040339"
  },
  "9696c165-223e-4078-9345-9ec3bd3fafa7": {
    "id": "9696c165-223e-4078-9345-9ec3bd3fafa7",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:40:44.108728",
    "updated_at": "2025-03-15T04:40:44.108737"
  },
  "4fc92ea8-f6e0-480c-9d63-c27dfac31ad6": {
    "id": "4fc92ea8-f6e0-480c-9d63-c27dfac31ad6",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:40:44.176817",
    "updated_at": "2025-03-15T04:40:44.176827"
  },
  "b12a4f2a-3bde-4f50-9e63-68137362eb5f": {
    "id": "b12a4f2a-3bde-4f50-9e63-68137362eb5f",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:40:46.887593",
    "updated_at": "2025-03-15T04:40:46.887600"
  },
  "02fa1f83-8c2e-4315-b325-3eab7c7f1d3d": {
    "id": "02fa1f83-8c2e-4315-b325-3eab7c7f1d3d",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:40:46.926484",
    "updated_at": "2025-03-15T04:40:46.926492"
  },
  "dde59005-ce09-4273-9ea4-a8d046364eab": {
    "id": "dde59005-ce09-4273-9ea4-a8d046364eab",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:40:46.965466",
    "updated_at": "2025-03-15T04:40:46.965475"
  },
  "e103ed37-5a27-48ce-bcf5-3bc12740ca90": {
    "id": "e103ed37-5a27-48ce-bcf5-3bc12740ca90",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:40:58.770192",
    "updated_at": "2025-03-15T04:40:58.770198"
  },
  "12f53d6b-0078-4681-ab01-89c4aa07d825": {
    "id": "12f53d6b-0078-4681-ab01-89c4aa07d825",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:40:58.830869",
    "updated_at": "2025-03-15T04:40:58.830878"
  },
  "27237bac-1e8e-4c66-8930-7938c1b9ffca": {
    "id": "27237bac-1e8e-4c66-8930-7938c1b9ffca",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:40:58.869727",
    "updated_at": "2025-03-15T04:40:58.869736"
  },
  "569e6a27-042c-4b86-a992-7d43b9ebd40b": {
    "id": "569e6a27-042c-4b86-a992-7d43b9ebd40b",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:42:19.592163",
    "updated_at": "2025-03-15T04:42:19.592168"
  },
  "c322303f-fb40-4b48-8cca-319e814d2c91": {
    "id": "c322303f-fb40-4b48-8cca-319e814d2c91",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:42:19.631750",
    "updated_at": "2025-03-15T04:42:19.631757"
  },
  "15bec6bb-9d14-486a-b1ec-0b996789a3ce": {
    "id": "15bec6bb-9d14-486a-b1ec-0b996789a3ce",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:42:19.670670",
    "updated_at": "2025-03-15T04:42:19.670675"
  },
  "e2e0c993-e642-4c46-96f7-9885e42526e8": {
    "id": "e2e0c993-e642-4c46-96f7-9885e42526e8",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:42:28.699383",
    "updated_at": "2025-03-15T04:42:28.699390"
  },
  "1c9e66e2-e0e7-4b68-b7f5-2336c0b84fb1": {
    "id": "1c9e66e2-e0e7-4b68-b7f5-2336c0b84fb1",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:42:28.739821",
    "updated_at": "2025-03-15T04:42:28.739831"
  },
  "193c9abd-5105-4d86-b639-59b2369a050e": {
    "id": "193c9abd-5105-4d86-b639-59b2369a050e",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:42:28.779867",
    "updated_at": "2025-03-15T04:42:28.779878"
  },
  "acd26eb9-0150-45f4-b685-ddfb44e3d9e4": {
    "id": "acd26eb9-0150-45f4-b685-ddfb44e3d9e4",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:42:40.190385",
    "updated_at": "2025-03-15T04:42:40.190391"
  },
  "0ba38e4b-c368-4282-a063-239f0b96f1a2": {
    "id": "0ba38e4b-c368-4282-a063-239f0b96f1a2",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:42:40.241503",
    "updated_at": "2025-03-15T04:42:40.241509"
  },
  "84489eed-62ce-4e36-a483-97103b47fbfe": {
    "id": "84489eed-62ce-4e36-a483-97103b47fbfe",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:42:40.290694",
    "updated_at": "2025-03-15T04:42:40.290700"
  },
  "20a3a155-735c-4da7-8ac6-1ed5b799e2bf": {
    "id": "20a3a155-735c-4da7-8ac6-1ed5b799e2bf",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:52:23.951957",
    "updated_at": "2025-03-15T04:52:23.951963"
  },
  "272a7735-5d6e-4398-adfe-53a01e0e00f7": {
    "id": "272a7735-5d6e-4398-adfe-53a01e0e00f7",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:52:24.022702",
    "updated_at": "2025-03-15T04:52:24.022711"
  },
  "fdf37148-7759-4774-93b5-2bf4214fdf6a": {
    "id": "fdf37148-7759-4774-93b5-2bf4214fdf6a",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:52:24.101442",
    "updated_at": "2025-03-15T04:52:24.101450"
  },
  "f89a2321-58ff-41cc-9b6c-d9b8be959999": {
    "id": "f89a2321-58ff-41cc-9b6c-d9b8be959999",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:55:48.655355",
    "updated_at": "2025-03-15T04:55:48.655362"
  },
  "ea68d693-278a-4c5a-8229-767e571358a8": {
    "id": "ea68d693-278a-4c5a-8229-767e571358a8",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:55:48.697970",
    "updated_at": "2025-03-15T04:55:48.697978"
  },
  "26e20140-5b56-4e86-b2e7-cab7674972dd": {
    "id": "26e20140-5b56-4e86-b2e7-cab7674972dd",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:55:48.753085",
    "updated_at": "2025-03-15T04:55:48.753095"
  },
  "75166942-6b37-4440-8286-12e9570e7f41": {
    "id": "75166942-6b37-4440-8286-12e9570e7f41",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:55:51.102736",
    "updated_at": "2025-03-15T04:55:51.102742"
  },
  "4c6f31ec-2b66-46d0-a79e-19bbe6e7a2da": {
    "id": "4c6f31ec-2b66-46d0-a79e-19bbe6e7a2da",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:55:51.142480",
    "updated_at": "2025-03-15T04:55:51.142485"
  },
  "d18f18ad-57d8-4932-8234-9a58bc2e946e": {
    "id": "d18f18ad-57d8-4932-8234-9a58bc2e946e",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:55:51.192877",
    "updated_at": "2025-03-15T04:55:51.192884"
  },
  "aae24766-6d04-4c83-8c49-20c6029a7099": {
    "id": "aae24766-6d04-4c83-8c49-20c6029a7099",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:55:52.710931",
    "updated_at": "2025-03-15T04:55:52.710938"
  },
  "a79fe475-abf9-4a60-896d-3a47f105b5f1": {
    "id": "a79fe475-abf9-4a60-896d-3a47f105b5f1",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:55:52.751569",
    "updated_at": "2025-03-15T04:55:52.751574"
  },
  "87b3ea97-004e-4d27-9b7e-cb6fb254a269": {
    "id": "87b3ea97-004e-4d27-9b7e-cb6fb254a269",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:55:52.813702",
    "updated_at": "2025-03-15T04:55:52.813712"
  },
  "a7606d86-671d-4fd0-a287-fc28b6a9f1f3": {
    "id": "a7606d86-671d-4fd0-a287-fc28b6a9f1f3",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:56:04.982642",
    "updated_at": "2025-03-15T04:56:04.982651"
  },
  "09665606-7372-4567-b43c-f67c92632813": {
    "id": "09665606-7372-4567-b43c-f67c92632813",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:56:05.135651",
    "updated_at": "2025-03-15T04:56:05.135661"
  },
  "b2888022-a5cd-47b9-a949-9a11e336e875": {
    "id": "b2888022-a5cd-47b9-a949-9a11e336e875",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:56:05.294082",
    "updated_at": "2025-03-15T04:56:05.294092"
  },
  "e331669a-80db-49ea-98ca-230e445c6316": {
    "id": "e331669a-80db-49ea-98ca-230e445c6316",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:56:08.512648",
    "updated_at": "2025-03-15T04:56:08.512656"
  },
  "e32baea8-2951-41d2-9e1c-4f14dd7e4dad": {
    "id": "e32baea8-2951-41d2-9e1c-4f14dd7e4dad",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:56:08.585816",
    "updated_at": "2025-03-15T04:56:08.585825"
  },
  "de345457-ae5e-4387-881b-aad29ef3b10b": {
    "id": "de345457-ae5e-4387-881b-aad29ef3b10b",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:56:08.666537",
    "updated_at": "2025-03-15T04:56:08.666547"
  },
  "dcd1ae81-d18f-4626-9ff9-b8976bb68c9d": {
    "id": "dcd1ae81-d18f-4626-9ff9-b8976bb68c9d",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:56:25.122972",
    "updated_at": "2025-03-15T04:56:25.122979"
  },
  "c0cbd9d1-0747-4873-9f94-221fc061059e": {
    "id": "c0cbd9d1-0747-4873-9f94-221fc061059e",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:56:25.221760",
    "updated_at": "2025-03-15T04:56:25.221768"
  },
  "38791005-844c-484c-b802-e6dab175ddf3": {
    "id": "38791005-844c-484c-b802-e6dab175ddf3",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:56:25.327359",
    "updated_at": "2025-03-15T04:56:25.327369"
  },
  "1e7dec7d-490a-468a-85e1-02c03edb213e": {
    "id": "1e7dec7d-490a-468a-85e1-02c03edb213e",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:57:37.410149",
    "updated_at": "2025-03-15T04:57:37.410155"
  },
  "691ea8ce-2620-4c4d-8b14-d04492ea6451": {
    "id": "691ea8ce-2620-4c4d-8b14-d04492ea6451",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:57:37.454154",
    "updated_at": "2025-03-15T04:57:37.454162"
  },
  "c0c9a3a9-70c2-4e26-a0fa-b580bda79da6": {
    "id": "c0c9a3a9-70c2-4e26-a0fa-b580bda79da6",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:57:37.515549",
    "updated_at": "2025-03-15T04:57:37.515559"
  },
  "2e89af0d-2029-4589-b772-517b8e4125ec": {
    "id": "2e89af0d-2029-4589-b772-517b8e4125ec",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:57:49.838559",
    "updated_at": "2025-03-15T04:57:49.838565"
  },
  "152fc902-e0c9-4745-a004-dd8c88ab95b5": {
    "id": "152fc902-e0c9-4745-a004-dd8c88ab95b5",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:57:49.918861",
    "updated_at": "2025-03-15T04:57:49.918871"
  },
  "29ede619-ba6d-4b07-8968-2c4024b67497": {
    "id": "29ede619-ba6d-4b07-8968-2c4024b67497",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T04:57:49.967678",
    "updated_at": "2025-03-15T04:57:49.967687"
  },
  "f17a4dc1-d0bb-4931-905d-86f56ad73bb9": {
    "id": "f17a4dc1-d0bb-4931-905d-86f56ad73bb9",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T05:06:45.731996",
    "updated_at": "2025-03-15T05:06:45.732001"
  },
  "3213408c-a13a-44ec-a7bc-f78a04c6c8c5": {
    "id": "3213408c-a13a-44ec-a7bc-f78a04c6c8c5",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T05:06:45.775073",
    "updated_at": "2025-03-15T05:06:45.775082"
  },
  "df4a9edd-6004-49b3-855d-b85394659222": {
    "id": "df4a9edd-6004-49b3-855d-b85394659222",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T05:06:45.831350",
    "updated_at": "2025-03-15T05:06:45.831359"
  },
  "686a079a-1465-4c2a-b0c1-7b8a59fff29f": {
    "id": "686a079a-1465-4c2a-b0c1-7b8a59fff29f",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T05:17:30.586288",
    "updated_at": "2025-03-15T05:17:30.586298"
  },
  "8ec8f1ef-7ac8-4604-b141-ea1db05cbc64": {
    "id": "8ec8f1ef-7ac8-4604-b141-ea1db05cbc64",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T05:17:30.679440",
    "updated_at": "2025-03-15T05:17:30.679450"
  },
  "ef5ca789-079c-47df-96b6-ee6254c2ddfa": {
    "id": "ef5ca789-079c-47df-96b6-ee6254c2ddfa",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T05:17:30.765359",
    "updated_at": "2025-03-15T05:17:30.765370"
  },
  "3fd71e5d-7cab-4dce-a832-475ee21c2b26": {
    "id": "3fd71e5d-7cab-4dce-a832-475ee21c2b26",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T05:19:15.509561",
    "updated_at": "2025-03-15T05:19:15.509570"
  },
  "6f53ceea-4e07-45e9-9c1c-2b187f6111c3": {
    "id": "6f53ceea-4e07-45e9-9c1c-2b187f6111c3",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T05:19:15.639684",
    "updated_at": "2025-03-15T05:19:15.639695"
  },
  "45f4548f-4aac-417f-b53f-6a60cb5c5d41": {
    "id": "45f4548f-4aac-417f-b53f-6a60cb5c5d41",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T05:19:15.777287",
    "updated_at": "2025-03-15T05:19:15.777296"
  },
  "755a61b3-1f9c-415e-ba8a-0b7d49c6faa5": {
    "id": "755a61b3-1f9c-415e-ba8a-0b7d49c6faa5",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T05:22:10.892483",
    "updated_at": "2025-03-15T05:22:10.892489"
  },
  "ba581bc8-7bf6-4241-b3b0-1bfe305ca58d": {
    "id": "ba581bc8-7bf6-4241-b3b0-1bfe305ca58d",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T05:22:10.977427",
    "updated_at": "2025-03-15T05:22:10.977436"
  },
  "7470b072-00fb-446e-8c2e-8f6f41fd334f": {
    "id": "7470b072-00fb-446e-8c2e-8f6f41fd334f",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T05:22:11.060131",
    "updated_at": "2025-03-15T05:22:11.060140"
  },
  "5a3e5b09-e853-4cd2-ad77-f75a40b45bd1": {
    "id": "5a3e5b09-e853-4cd2-ad77-f75a40b45bd1",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T05:28:54.256053",
    "updated_at": "2025-03-15T05:28:54.256060"
  },
  "d9c0a4d3-88e0-46ba-beac-054ef2c5de42": {
    "id": "d9c0a4d3-88e0-46ba-beac-054ef2c5de42",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T05:28:54.340302",
    "updated_at": "2025-03-15T05:28:54.340312"
  },
  "83a4f1ac-9327-42f4-8b00-08204765034b": {
    "id": "83a4f1ac-9327-42f4-8b00-08204765034b",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T05:28:54.421505",
    "updated_at": "2025-03-15T05:28:54.421515"
  },
  "88001b3e-ebdd-4836-9d21-f51a195f0f31": {
    "id": "88001b3e-ebdd-4836-9d21-f51a195f0f31",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T05:28:57.010819",
    "updated_at": "2025-03-15T05:28:57.010827"
  },
  "ae2ae718-21ab-43a4-b87b-7ce080dd36eb": {
    "id": "ae2ae718-21ab-43a4-b87b-7ce080dd36eb",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T05:28:57.092498",
    "updated_at": "2025-03-15T05:28:57.092506"
  },
  "702299b9-5409-4f77-ab2e-bba88d74e287": {
    "id": "702299b9-5409-4f77-ab2e-bba88d74e287",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T05:28:57.177130",
    "updated_at": "2025-03-15T05:28:57.177140"
  },
  "cabe7424-9bc9-4928-b567-b49887703924": {
    "id": "cabe7424-9bc9-4928-b567-b49887703924",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:03:55.236679",
    "updated_at": "2025-03-15T06:03:55.236684"
  },
  "81b9d793-09b4-49bc-98d4-d87308e6c0b6": {
    "id": "81b9d793-09b4-49bc-98d4-d87308e6c0b6",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:03:55.281618",
    "updated_at": "2025-03-15T06:03:55.281624"
  },
  "2e169cea-5064-4a7b-99f0-0c756f9a57b4": {
    "id": "2e169cea-5064-4a7b-99f0-0c756f9a57b4",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:03:55.327947",
    "updated_at": "2025-03-15T06:03:55.327954"
  },
  "4e9f934b-326a-458e-867c-9262622c179e": {
    "id": "4e9f934b-326a-458e-867c-9262622c179e",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:06:24.819187",
    "updated_at": "2025-03-15T06:06:24.819192"
  },
  "0d844d4c-1b12-49d7-bbee-7095ae13fd01": {
    "id": "0d844d4c-1b12-49d7-bbee-7095ae13fd01",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:06:24.865028",
    "updated_at": "2025-03-15T06:06:24.865033"
  },
  "9a176254-486e-4404-8eed-8f426d3e11d3": {
    "id": "9a176254-486e-4404-8eed-8f426d3e11d3",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:06:24.924932",
    "updated_at": "2025-03-15T06:06:24.924941"
  },
  "2466e2eb-c1b4-4a08-b497-a4c227ee947a": {
    "id": "2466e2eb-c1b4-4a08-b497-a4c227ee947a",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:06:32.251239",
    "updated_at": "2025-03-15T06:06:32.251245"
  },
  "5cac85e4-e7d4-451d-be17-fac010fc2459": {
    "id": "5cac85e4-e7d4-451d-be17-fac010fc2459",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:06:32.297885",
    "updated_at": "2025-03-15T06:06:32.297905"
  },
  "b14e9ba7-c34f-4441-a5aa-2148c1e41476": {
    "id": "b14e9ba7-c34f-4441-a5aa-2148c1e41476",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:06:32.344846",
    "updated_at": "2025-03-15T06:06:32.344854"
  },
  "2da2d1a5-3d61-4f01-9671-3b39df5ef340": {
    "id": "2da2d1a5-3d61-4f01-9671-3b39df5ef340",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:06:51.348151",
    "updated_at": "2025-03-15T06:06:51.348156"
  },
  "bcbcd0a6-49a8-426d-9fa3-8fe0a282de2d": {
    "id": "bcbcd0a6-49a8-426d-9fa3-8fe0a282de2d",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:06:51.393558",
    "updated_at": "2025-03-15T06:06:51.393563"
  },
  "cb825a8e-4fd8-459f-a173-b582881bb7f4": {
    "id": "cb825a8e-4fd8-459f-a173-b582881bb7f4",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:06:51.441540",
    "updated_at": "2025-03-15T06:06:51.441551"
  },
  "6528a9b3-d1e9-4f01-bb5e-a9b0f4c9d627": {
    "id": "6528a9b3-d1e9-4f01-bb5e-a9b0f4c9d627",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:07:59.722262",
    "updated_at": "2025-03-15T06:07:59.722275"
  },
  "d3be6d1f-4a0c-43d3-b158-013c93b1ee94": {
    "id": "d3be6d1f-4a0c-43d3-b158-013c93b1ee94",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:07:59.815940",
    "updated_at": "2025-03-15T06:07:59.815950"
  },
  "d319ad82-dac9-4ead-aa1e-6151b50916b1": {
    "id": "d319ad82-dac9-4ead-aa1e-6151b50916b1",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:07:59.902621",
    "updated_at": "2025-03-15T06:07:59.902631"
  },
  "6215c4d0-dd29-41f3-8787-52fc453f8390": {
    "id": "6215c4d0-dd29-41f3-8787-52fc453f8390",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:09:39.725548",
    "updated_at": "2025-03-15T06:09:39.725555"
  },
  "9cf6da8d-f69f-4e5f-b8d3-eed4a5c122a4": {
    "id": "9cf6da8d-f69f-4e5f-b8d3-eed4a5c122a4",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:09:39.816775",
    "updated_at": "2025-03-15T06:09:39.816785"
  },
  "e3b9bfee-b9df-4c89-8f88-33db707ef03b": {
    "id": "e3b9bfee-b9df-4c89-8f88-33db707ef03b",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:09:39.901326",
    "updated_at": "2025-03-15T06:09:39.901335"
  },
  "1327bcfc-1140-4673-bc63-7a40dca7e3f7": {
    "id": "1327bcfc-1140-4673-bc63-7a40dca7e3f7",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:30:12.815276",
    "updated_at": "2025-03-15T06:30:12.815282"
  },
  "45acdbb2-4d4e-4273-851e-45428701403e": {
    "id": "45acdbb2-4d4e-4273-851e-45428701403e",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:30:12.897871",
    "updated_at": "2025-03-15T06:30:12.897881"
  },
  "1d882bfd-f45d-474c-aae9-a05f1ec31316": {
    "id": "1d882bfd-f45d-474c-aae9-a05f1ec31316",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:30:12.960773",
    "updated_at": "2025-03-15T06:30:12.960781"
  },
  "ab372406-d27d-4061-8913-af47d326a51c": {
    "id": "ab372406-d27d-4061-8913-af47d326a51c",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:33:52.165964",
    "updated_at": "2025-03-15T06:33:52.165969"
  },
  "3025d64b-bc6f-4112-852a-2a6570aa2a2d": {
    "id": "3025d64b-bc6f-4112-852a-2a6570aa2a2d",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:33:52.220359",
    "updated_at": "2025-03-15T06:33:52.220366"
  },
  "70992f7c-a776-4269-9f2e-fa13b9ba0525": {
    "id": "70992f7c-a776-4269-9f2e-fa13b9ba0525",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:33:52.285764",
    "updated_at": "2025-03-15T06:33:52.285772"
  },
  "ff706935-8863-4af3-8160-72040262ebbb": {
    "id": "ff706935-8863-4af3-8160-72040262ebbb",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:37:43.122343",
    "updated_at": "2025-03-15T06:37:43.122349"
  },
  "8b6da34b-5cff-4cd6-aed3-a5026eaa5d69": {
    "id": "8b6da34b-5cff-4cd6-aed3-a5026eaa5d69",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:37:43.170061",
    "updated_at": "2025-03-15T06:37:43.170071"
  },
  "fc50d8a4-439f-4e48-8587-74fcdcc8cded": {
    "id": "fc50d8a4-439f-4e48-8587-74fcdcc8cded",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:37:43.227650",
    "updated_at": "2025-03-15T06:37:43.227659"
  },
  "0103acaf-5260-4785-acd9-ae65310a71a0": {
    "id": "0103acaf-5260-4785-acd9-ae65310a71a0",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:38:41.675785",
    "updated_at": "2025-03-15T06:38:41.675797"
  },
  "8416be3f-abfd-41e9-9700-e5cc979babce": {
    "id": "8416be3f-abfd-41e9-9700-e5cc979babce",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:38:41.723731",
    "updated_at": "2025-03-15T06:38:41.723737"
  },
  "bc9a98fc-0750-4895-ad6e-2fdef3968f83": {
    "id": "bc9a98fc-0750-4895-ad6e-2fdef3968f83",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:38:41.771057",
    "updated_at": "2025-03-15T06:38:41.771067"
  },
  "53c10d53-6dd8-4eef-b6a6-8b8ddcc39f7f": {
    "id": "53c10d53-6dd8-4eef-b6a6-8b8ddcc39f7f",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:42:29.396915",
    "updated_at": "2025-03-15T06:42:29.396920"
  },
  "39f9eea5-303f-4c81-a65d-a1f8ebad0f4a": {
    "id": "39f9eea5-303f-4c81-a65d-a1f8ebad0f4a",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:42:29.448524",
    "updated_at": "2025-03-15T06:42:29.448527"
  },
  "ab12fb0c-ac5f-4071-b1b8-7f35f96eb8b4": {
    "id": "ab12fb0c-ac5f-4071-b1b8-7f35f96eb8b4",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:42:29.497555",
    "updated_at": "2025-03-15T06:42:29.497559"
  },
  "57de0827-5255-4644-92fb-50e0778ccc94": {
    "id": "57de0827-5255-4644-92fb-50e0778ccc94",
    "name": "Infrastructure Pipeline",
    "description": "Generate, review, and deploy infrastructure with security and cost optimization",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate infrastructure code based on requirements",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate AWS infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "cost_optimization",
        "name": "Cost Optimization",
        "description": "Optimize infrastructure for cost",
        "agent": "cost",
        "action": "optimize",
        "parameters": {
          "code": "${security_review.remediated_code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_story",
        "name": "Create Jira Story",
        "description": "Create a Jira story for the infrastructure",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "INFRA",
          "issue_type": "Story",
          "summary": "Deploy new infrastructure",
          "description": "Deploy the following infrastructure:\n${cost_optimization.optimized_code}"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_branch",
        "name": "Create GitHub Branch",
        "description": "Create a GitHub branch for the infrastructure code",
        "agent": "github",
        "action": "create_branch",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "base_branch": "main"
        },
        "depends_on": [
          "cost_optimization"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the infrastructure code to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "infrastructure-repo",
          "branch": "feature/new-infrastructure",
          "message": "Add new infrastructure",
          "files": {
            "main.tf": "${cost_optimization.optimized_code}"
          }
        },
        "depends_on": [
          "create_github_branch"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_page",
        "name": "Create Confluence Page",
        "description": "Create a Confluence page for the infrastructure",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "INFRA",
          "title": "New Infrastructure Documentation",
          "content": "# New Infrastructure\n\nThis infrastructure was generated by the Infrastructure Automation System.\n\n## Code\n\n```terraform\n${cost_optimization.optimized_code}\n```\n\n## Security Review\n\n${security_review.vulnerabilities}\n\n## Cost Optimization\n\n${cost_optimization.optimization_summary}"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR for the infrastructure code",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "infrastructure-repo",
          "title": "New Infrastructure",
          "body": "This PR adds new infrastructure. See ${create_confluence_page.url} for details.",
          "head": "feature/new-infrastructure",
          "base": "main"
        },
        "depends_on": [
          "create_confluence_page"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "update_jira_story",
        "name": "Update Jira Story",
        "description": "Update the Jira story with the PR and Confluence page",
        "agent": "jira",
        "action": "update_issue",
        "parameters": {
          "issue_key": "${create_jira_story.issue_key}",
          "fields": {
            "description": "Deploy the following infrastructure:\n\nGitHub PR: ${create_github_pr.html_url}\nConfluence Page: ${create_confluence_page.url}"
          }
        },
        "depends_on": [
          "create_github_pr"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:42:45.703476",
    "updated_at": "2025-03-15T06:42:45.703484"
  },
  "e3784e76-73f8-446f-8a3a-33d057f4be95": {
    "id": "e3784e76-73f8-446f-8a3a-33d057f4be95",
    "name": "Terraform to Kubernetes Pipeline",
    "description": "Generate infrastructure, deploy to Kubernetes, and manage with ArgoCD",
    "steps": [
      {
        "id": "generate_infra",
        "name": "Generate Infrastructure",
        "description": "Generate Terraform infrastructure code",
        "agent": "infrastructure",
        "action": "generate",
        "parameters": {
          "task": "Generate Kubernetes infrastructure",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "${generate_infra.code}",
          "cloud_provider": "aws",
          "iac_type": "terraform"
        },
        "depends_on": [
          "generate_infra"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "generate_k8s_manifests",
        "name": "Generate Kubernetes Manifests",
        "description": "Generate Kubernetes manifests",
        "agent": "kubernetes",
        "action": "generate_manifests",
        "parameters": {
          "application_spec": {
            "name": "my-app",
            "type": "web",
            "replicas": 3,
            "container_image": "nginx:latest"
          }
        },
        "depends_on": [
          "security_review"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_repo",
        "name": "Create GitHub Repository",
        "description": "Create a GitHub repository for the Kubernetes manifests",
        "agent": "github",
        "action": "create_repository",
        "parameters": {
          "name": "kubernetes-manifests",
          "description": "Kubernetes manifests for my application",
          "private": false
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_commit",
        "name": "Create GitHub Commit",
        "description": "Commit the Kubernetes manifests to GitHub",
        "agent": "github",
        "action": "create_commit",
        "parameters": {
          "repo": "kubernetes-manifests",
          "branch": "main",
          "message": "Add Kubernetes manifests",
          "files": {
            "manifests.yaml": "${generate_k8s_manifests.manifests}"
          }
        },
        "depends_on": [
          "create_github_repo",
          "generate_k8s_manifests"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_argocd_app",
        "name": "Create ArgoCD Application",
        "description": "Create an ArgoCD application for the Kubernetes manifests",
        "agent": "argocd",
        "action": "create_application",
        "parameters": {
          "name": "my-app",
          "repo_url": "${create_github_repo.clone_url}",
          "path": ".",
          "namespace": "default"
        },
        "depends_on": [
          "create_github_commit"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "sync_argocd_app",
        "name": "Sync ArgoCD Application",
        "description": "Sync the ArgoCD application",
        "agent": "argocd",
        "action": "sync_application",
        "parameters": {
          "name": "my-app"
        },
        "depends_on": [
          "create_argocd_app"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:42:45.751695",
    "updated_at": "2025-03-15T06:42:45.751702"
  },
  "334c149d-d0c5-4068-b9b8-f1c7ada7d430": {
    "id": "334c149d-d0c5-4068-b9b8-f1c7ada7d430",
    "name": "Security Review Pipeline",
    "description": "Security review, vulnerability scanning, and remediation for infrastructure code",
    "steps": [
      {
        "id": "security_review",
        "name": "Security Review",
        "description": "Review infrastructure for security issues",
        "agent": "security",
        "action": "review",
        "parameters": {
          "code": "input.infrastructure_code",
          "cloud_provider": "input.cloud_provider",
          "iac_type": "input.iac_type"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "security_scan",
        "name": "Security Scan",
        "description": "Scan infrastructure for vulnerabilities",
        "agent": "security_scanner",
        "action": "scan_iac",
        "parameters": {
          "code": "input.infrastructure_code",
          "iac_type": "input.iac_type",
          "framework": "input.compliance_framework"
        },
        "depends_on": [],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_jira_vulnerabilities",
        "name": "Create Jira Vulnerabilities",
        "description": "Create Jira issues for vulnerabilities",
        "agent": "jira",
        "action": "create_issue",
        "parameters": {
          "project_key": "SEC",
          "issue_type": "Bug",
          "summary": "Security vulnerabilities in infrastructure code",
          "description": "The following vulnerabilities were found:\n\n${security_review.vulnerabilities}\n\n${security_scan.result.findings}"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_confluence_report",
        "name": "Create Confluence Report",
        "description": "Create a Confluence page with the security report",
        "agent": "confluence",
        "action": "create_page",
        "parameters": {
          "space_key": "SEC",
          "title": "Security Review Report",
          "content": "# Security Review Report\n\n## Overview\n\nThis report contains the results of a security review of infrastructure code.\n\n## Vulnerabilities\n\n${security_review.vulnerabilities}\n\n## Scan Results\n\n${security_scan.result.findings}\n\n## Remediated Code\n\n```terraform\n${security_review.remediated_code}\n```"
        },
        "depends_on": [
          "security_review",
          "security_scan"
        ],
        "condition": null,
        "max_retries": 3,
        "timeout_seconds": 600
      },
      {
        "id": "create_github_pr",
        "name": "Create GitHub PR",
        "description": "Create a GitHub PR with the security fixes",
        "agent": "github",
        "action": "create_pr",
        "parameters": {
          "repo": "input.github_repo",
          "title": "Security fixes",
          "body": "This PR fixes security vulnerabilities. See ${create_confluence_report.url} for details.",
          "head": "security-fixes",
          "base": "main",
          "changes": {
            "main.tf": "${security_review.remediated_code}"
          }
        },
        "depends_on": [
          "create_confluence_report"
        ],
        "condition": "input.create_pr === true",
        "max_retries": 3,
        "timeout_seconds": 600
      }
    ],
    "metadata": {},
    "created_at": "2025-03-15T06:42:45.801077",
    "updated_at": "2025-03-15T06:42:45.801087"
  }
}